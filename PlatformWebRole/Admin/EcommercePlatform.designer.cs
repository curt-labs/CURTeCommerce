#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Admin
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ecom_platform")]
	public partial class EcommercePlatformDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAddress(Address instance);
    partial void UpdateAddress(Address instance);
    partial void DeleteAddress(Address instance);
    partial void InsertTestimonial(Testimonial instance);
    partial void UpdateTestimonial(Testimonial instance);
    partial void DeleteTestimonial(Testimonial instance);
    partial void InsertBlogCategory(BlogCategory instance);
    partial void UpdateBlogCategory(BlogCategory instance);
    partial void DeleteBlogCategory(BlogCategory instance);
    partial void InsertBlogPost_BlogCategory(BlogPost_BlogCategory instance);
    partial void UpdateBlogPost_BlogCategory(BlogPost_BlogCategory instance);
    partial void DeleteBlogPost_BlogCategory(BlogPost_BlogCategory instance);
    partial void InsertBlogPost(BlogPost instance);
    partial void UpdateBlogPost(BlogPost instance);
    partial void DeleteBlogPost(BlogPost instance);
    partial void InsertCart(Cart instance);
    partial void UpdateCart(Cart instance);
    partial void DeleteCart(Cart instance);
    partial void InsertCartItem(CartItem instance);
    partial void UpdateCartItem(CartItem instance);
    partial void DeleteCartItem(CartItem instance);
    partial void InsertComment(Comment instance);
    partial void UpdateComment(Comment instance);
    partial void DeleteComment(Comment instance);
    partial void InsertContactInquiry(ContactInquiry instance);
    partial void UpdateContactInquiry(ContactInquiry instance);
    partial void DeleteContactInquiry(ContactInquiry instance);
    partial void InsertContactType(ContactType instance);
    partial void UpdateContactType(ContactType instance);
    partial void DeleteContactType(ContactType instance);
    partial void InsertContentNesting(ContentNesting instance);
    partial void UpdateContentNesting(ContentNesting instance);
    partial void DeleteContentNesting(ContentNesting instance);
    partial void InsertContentPage(ContentPage instance);
    partial void UpdateContentPage(ContentPage instance);
    partial void DeleteContentPage(ContentPage instance);
    partial void InsertCountry(Country instance);
    partial void UpdateCountry(Country instance);
    partial void DeleteCountry(Country instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertFAQ(FAQ instance);
    partial void UpdateFAQ(FAQ instance);
    partial void DeleteFAQ(FAQ instance);
    partial void InsertFaqTopic(FaqTopic instance);
    partial void UpdateFaqTopic(FaqTopic instance);
    partial void DeleteFaqTopic(FaqTopic instance);
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    partial void InsertLocationService(LocationService instance);
    partial void UpdateLocationService(LocationService instance);
    partial void DeleteLocationService(LocationService instance);
    partial void InsertModule(Module instance);
    partial void UpdateModule(Module instance);
    partial void DeleteModule(Module instance);
    partial void InsertNewsletter(Newsletter instance);
    partial void UpdateNewsletter(Newsletter instance);
    partial void DeleteNewsletter(Newsletter instance);
    partial void InsertPayment(Payment instance);
    partial void UpdatePayment(Payment instance);
    partial void DeletePayment(Payment instance);
    partial void InsertPaymentType(PaymentType instance);
    partial void UpdatePaymentType(PaymentType instance);
    partial void DeletePaymentType(PaymentType instance);
    partial void InsertProfile(Profile instance);
    partial void UpdateProfile(Profile instance);
    partial void DeleteProfile(Profile instance);
    partial void InsertProfileModule(ProfileModule instance);
    partial void UpdateProfileModule(ProfileModule instance);
    partial void DeleteProfileModule(ProfileModule instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertDistributionCenter(DistributionCenter instance);
    partial void UpdateDistributionCenter(DistributionCenter instance);
    partial void DeleteDistributionCenter(DistributionCenter instance);
    partial void InsertBanner(Banner instance);
    partial void UpdateBanner(Banner instance);
    partial void DeleteBanner(Banner instance);
    partial void InsertSetting(Setting instance);
    partial void UpdateSetting(Setting instance);
    partial void DeleteSetting(Setting instance);
    partial void InsertSettingGroup(SettingGroup instance);
    partial void UpdateSettingGroup(SettingGroup instance);
    partial void DeleteSettingGroup(SettingGroup instance);
    partial void InsertScheduledTask(ScheduledTask instance);
    partial void UpdateScheduledTask(ScheduledTask instance);
    partial void DeleteScheduledTask(ScheduledTask instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    partial void InsertInvoiceItem(InvoiceItem instance);
    partial void UpdateInvoiceItem(InvoiceItem instance);
    partial void DeleteInvoiceItem(InvoiceItem instance);
    partial void InsertInvoiceCode(InvoiceCode instance);
    partial void UpdateInvoiceCode(InvoiceCode instance);
    partial void DeleteInvoiceCode(InvoiceCode instance);
    #endregion
		
		public EcommercePlatformDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ecom_platformConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EcommercePlatformDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EcommercePlatformDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EcommercePlatformDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EcommercePlatformDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Address> Addresses
		{
			get
			{
				return this.GetTable<Address>();
			}
		}
		
		public System.Data.Linq.Table<Testimonial> Testimonials
		{
			get
			{
				return this.GetTable<Testimonial>();
			}
		}
		
		public System.Data.Linq.Table<BlogCategory> BlogCategories
		{
			get
			{
				return this.GetTable<BlogCategory>();
			}
		}
		
		public System.Data.Linq.Table<BlogPost_BlogCategory> BlogPost_BlogCategories
		{
			get
			{
				return this.GetTable<BlogPost_BlogCategory>();
			}
		}
		
		public System.Data.Linq.Table<BlogPost> BlogPosts
		{
			get
			{
				return this.GetTable<BlogPost>();
			}
		}
		
		public System.Data.Linq.Table<Cart> Carts
		{
			get
			{
				return this.GetTable<Cart>();
			}
		}
		
		public System.Data.Linq.Table<CartItem> CartItems
		{
			get
			{
				return this.GetTable<CartItem>();
			}
		}
		
		public System.Data.Linq.Table<Comment> Comments
		{
			get
			{
				return this.GetTable<Comment>();
			}
		}
		
		public System.Data.Linq.Table<ContactInquiry> ContactInquiries
		{
			get
			{
				return this.GetTable<ContactInquiry>();
			}
		}
		
		public System.Data.Linq.Table<ContactType> ContactTypes
		{
			get
			{
				return this.GetTable<ContactType>();
			}
		}
		
		public System.Data.Linq.Table<ContentNesting> ContentNestings
		{
			get
			{
				return this.GetTable<ContentNesting>();
			}
		}
		
		public System.Data.Linq.Table<ContentPage> ContentPages
		{
			get
			{
				return this.GetTable<ContentPage>();
			}
		}
		
		public System.Data.Linq.Table<Country> Countries
		{
			get
			{
				return this.GetTable<Country>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<FAQ> FAQs
		{
			get
			{
				return this.GetTable<FAQ>();
			}
		}
		
		public System.Data.Linq.Table<FaqTopic> FaqTopics
		{
			get
			{
				return this.GetTable<FaqTopic>();
			}
		}
		
		public System.Data.Linq.Table<Location> Locations
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
		
		public System.Data.Linq.Table<LocationService> LocationServices
		{
			get
			{
				return this.GetTable<LocationService>();
			}
		}
		
		public System.Data.Linq.Table<Module> Modules
		{
			get
			{
				return this.GetTable<Module>();
			}
		}
		
		public System.Data.Linq.Table<Newsletter> Newsletters
		{
			get
			{
				return this.GetTable<Newsletter>();
			}
		}
		
		public System.Data.Linq.Table<Payment> Payments
		{
			get
			{
				return this.GetTable<Payment>();
			}
		}
		
		public System.Data.Linq.Table<PaymentType> PaymentTypes
		{
			get
			{
				return this.GetTable<PaymentType>();
			}
		}
		
		public System.Data.Linq.Table<Profile> Profiles
		{
			get
			{
				return this.GetTable<Profile>();
			}
		}
		
		public System.Data.Linq.Table<ProfileModule> ProfileModules
		{
			get
			{
				return this.GetTable<ProfileModule>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<DistributionCenter> DistributionCenters
		{
			get
			{
				return this.GetTable<DistributionCenter>();
			}
		}
		
		public System.Data.Linq.Table<Banner> Banners
		{
			get
			{
				return this.GetTable<Banner>();
			}
		}
		
		public System.Data.Linq.Table<Setting> Settings
		{
			get
			{
				return this.GetTable<Setting>();
			}
		}
		
		public System.Data.Linq.Table<SettingGroup> SettingGroups
		{
			get
			{
				return this.GetTable<SettingGroup>();
			}
		}
		
		public System.Data.Linq.Table<ScheduledTask> ScheduledTasks
		{
			get
			{
				return this.GetTable<ScheduledTask>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceItem> InvoiceItems
		{
			get
			{
				return this.GetTable<InvoiceItem>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceCode> InvoiceCodes
		{
			get
			{
				return this.GetTable<InvoiceCode>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Address")]
	public partial class Address : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _street1;
		
		private string _street2;
		
		private string _city;
		
		private int _state;
		
		private string _postal_code;
		
		private int _cust_id;
		
		private bool _residential;
		
		private string _first;
		
		private string _last;
		
		private bool _active;
		
		private EntityRef<Cart> _Carts;
		
		private EntityRef<Cart> _Carts1;
		
		private EntitySet<Customer> _Customers;
		
		private EntitySet<Customer> _Customers1;
		
		private EntityRef<State> _State1;
		
		private EntityRef<Invoice> _Invoice;
		
		private EntityRef<Invoice> _Invoice1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onstreet1Changing(string value);
    partial void Onstreet1Changed();
    partial void Onstreet2Changing(string value);
    partial void Onstreet2Changed();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstateChanging(int value);
    partial void OnstateChanged();
    partial void Onpostal_codeChanging(string value);
    partial void Onpostal_codeChanged();
    partial void Oncust_idChanging(int value);
    partial void Oncust_idChanged();
    partial void OnresidentialChanging(bool value);
    partial void OnresidentialChanged();
    partial void OnfirstChanging(string value);
    partial void OnfirstChanged();
    partial void OnlastChanging(string value);
    partial void OnlastChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public Address()
		{
			this._Carts = default(EntityRef<Cart>);
			this._Carts1 = default(EntityRef<Cart>);
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			this._Customers1 = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers1), new Action<Customer>(this.detach_Customers1));
			this._State1 = default(EntityRef<State>);
			this._Invoice = default(EntityRef<Invoice>);
			this._Invoice1 = default(EntityRef<Invoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if ((this._Invoice.HasLoadedOrAssignedValue || this._Invoice1.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_street1", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string street1
		{
			get
			{
				return this._street1;
			}
			set
			{
				if ((this._street1 != value))
				{
					this.Onstreet1Changing(value);
					this.SendPropertyChanging();
					this._street1 = value;
					this.SendPropertyChanged("street1");
					this.Onstreet1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_street2", DbType="VarChar(400)")]
		public string street2
		{
			get
			{
				return this._street2;
			}
			set
			{
				if ((this._street2 != value))
				{
					this.Onstreet2Changing(value);
					this.SendPropertyChanging();
					this._street2 = value;
					this.SendPropertyChanged("street2");
					this.Onstreet2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="Int NOT NULL")]
		public int state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					if (this._State1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postal_code", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string postal_code
		{
			get
			{
				return this._postal_code;
			}
			set
			{
				if ((this._postal_code != value))
				{
					this.Onpostal_codeChanging(value);
					this.SendPropertyChanging();
					this._postal_code = value;
					this.SendPropertyChanged("postal_code");
					this.Onpostal_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_id", DbType="Int NOT NULL")]
		public int cust_id
		{
			get
			{
				return this._cust_id;
			}
			set
			{
				if ((this._cust_id != value))
				{
					this.Oncust_idChanging(value);
					this.SendPropertyChanging();
					this._cust_id = value;
					this.SendPropertyChanged("cust_id");
					this.Oncust_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_residential", DbType="Bit NOT NULL")]
		public bool residential
		{
			get
			{
				return this._residential;
			}
			set
			{
				if ((this._residential != value))
				{
					this.OnresidentialChanging(value);
					this.SendPropertyChanging();
					this._residential = value;
					this.SendPropertyChanged("residential");
					this.OnresidentialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first", DbType="VarChar(255)")]
		public string first
		{
			get
			{
				return this._first;
			}
			set
			{
				if ((this._first != value))
				{
					this.OnfirstChanging(value);
					this.SendPropertyChanging();
					this._first = value;
					this.SendPropertyChanged("first");
					this.OnfirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last", DbType="VarChar(255)")]
		public string last
		{
			get
			{
				return this._last;
			}
			set
			{
				if ((this._last != value))
				{
					this.OnlastChanging(value);
					this.SendPropertyChanging();
					this._last = value;
					this.SendPropertyChanged("last");
					this.OnlastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Cart", Storage="_Carts", ThisKey="ID", OtherKey="bill_to", IsUnique=true, IsForeignKey=false)]
		internal Cart Carts
		{
			get
			{
				return this._Carts.Entity;
			}
			set
			{
				Cart previousValue = this._Carts.Entity;
				if (((previousValue != value) 
							|| (this._Carts.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Carts.Entity = null;
						previousValue.Billing = null;
					}
					this._Carts.Entity = value;
					if ((value != null))
					{
						value.Billing = this;
					}
					this.SendPropertyChanged("Carts");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Cart1", Storage="_Carts1", ThisKey="ID", OtherKey="ship_to", IsUnique=true, IsForeignKey=false)]
		internal Cart Carts1
		{
			get
			{
				return this._Carts1.Entity;
			}
			set
			{
				Cart previousValue = this._Carts1.Entity;
				if (((previousValue != value) 
							|| (this._Carts1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Carts1.Entity = null;
						previousValue.Shipping = null;
					}
					this._Carts1.Entity = value;
					if ((value != null))
					{
						value.Shipping = this;
					}
					this.SendPropertyChanged("Carts1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Customer", Storage="_Customers", ThisKey="ID", OtherKey="billingID")]
		internal EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Customer1", Storage="_Customers1", ThisKey="ID", OtherKey="shippingID")]
		internal EntitySet<Customer> Customers1
		{
			get
			{
				return this._Customers1;
			}
			set
			{
				this._Customers1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Address", Storage="_State1", ThisKey="state", OtherKey="stateID", IsForeignKey=true)]
		public State State1
		{
			get
			{
				return this._State1.Entity;
			}
			set
			{
				State previousValue = this._State1.Entity;
				if (((previousValue != value) 
							|| (this._State1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State1.Entity = null;
						previousValue.Addresses.Remove(this);
					}
					this._State1.Entity = value;
					if ((value != null))
					{
						value.Addresses.Add(this);
						this._state = value.stateID;
					}
					else
					{
						this._state = default(int);
					}
					this.SendPropertyChanged("State1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Address", Storage="_Invoice", ThisKey="ID", OtherKey="billTo", IsForeignKey=true)]
		internal Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.BillTo = null;
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.BillTo = this;
						this._ID = value.billTo;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Address1", Storage="_Invoice1", ThisKey="ID", OtherKey="shipTo", IsForeignKey=true)]
		internal Invoice Invoice1
		{
			get
			{
				return this._Invoice1.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice1.Entity;
				if (((previousValue != value) 
							|| (this._Invoice1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice1.Entity = null;
						previousValue.ShipTo = null;
					}
					this._Invoice1.Entity = value;
					if ((value != null))
					{
						value.ShipTo = this;
						this._ID = value.shipTo;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("Invoice1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Address = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Address = null;
		}
		
		private void attach_Customers1(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = this;
		}
		
		private void detach_Customers1(Customer entity)
		{
			this.SendPropertyChanging();
			entity.Address1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Testimonial")]
	public partial class Testimonial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _testimonialID;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _testimonial1;
		
		private string _location;
		
		private System.DateTime _dateAdded;
		
		private bool _approved;
		
		private bool _active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntestimonialIDChanging(int value);
    partial void OntestimonialIDChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Ontestimonial1Changing(string value);
    partial void Ontestimonial1Changed();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    partial void OndateAddedChanging(System.DateTime value);
    partial void OndateAddedChanged();
    partial void OnapprovedChanging(bool value);
    partial void OnapprovedChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public Testimonial()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_testimonialID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int testimonialID
		{
			get
			{
				return this._testimonialID;
			}
			set
			{
				if ((this._testimonialID != value))
				{
					this.OntestimonialIDChanging(value);
					this.SendPropertyChanging();
					this._testimonialID = value;
					this.SendPropertyChanged("testimonialID");
					this.OntestimonialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(255)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="VarChar(255)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="testimonial", Storage="_testimonial1", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string testimonial1
		{
			get
			{
				return this._testimonial1;
			}
			set
			{
				if ((this._testimonial1 != value))
				{
					this.Ontestimonial1Changing(value);
					this.SendPropertyChanging();
					this._testimonial1 = value;
					this.SendPropertyChanged("testimonial1");
					this.Ontestimonial1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="VarChar(255)")]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime dateAdded
		{
			get
			{
				return this._dateAdded;
			}
			set
			{
				if ((this._dateAdded != value))
				{
					this.OndateAddedChanging(value);
					this.SendPropertyChanging();
					this._dateAdded = value;
					this.SendPropertyChanged("dateAdded");
					this.OndateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved", DbType="Bit NOT NULL")]
		public bool approved
		{
			get
			{
				return this._approved;
			}
			set
			{
				if ((this._approved != value))
				{
					this.OnapprovedChanging(value);
					this.SendPropertyChanging();
					this._approved = value;
					this.SendPropertyChanged("approved");
					this.OnapprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlogCategories")]
	public partial class BlogCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _blogCategoryID;
		
		private string _name;
		
		private string _slug;
		
		private bool _active;
		
		private EntitySet<BlogPost_BlogCategory> _BlogPost_BlogCategories;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnblogCategoryIDChanging(int value);
    partial void OnblogCategoryIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnslugChanging(string value);
    partial void OnslugChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public BlogCategory()
		{
			this._BlogPost_BlogCategories = new EntitySet<BlogPost_BlogCategory>(new Action<BlogPost_BlogCategory>(this.attach_BlogPost_BlogCategories), new Action<BlogPost_BlogCategory>(this.detach_BlogPost_BlogCategories));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blogCategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int blogCategoryID
		{
			get
			{
				return this._blogCategoryID;
			}
			set
			{
				if ((this._blogCategoryID != value))
				{
					this.OnblogCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._blogCategoryID = value;
					this.SendPropertyChanged("blogCategoryID");
					this.OnblogCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_slug", DbType="VarChar(255)")]
		public string slug
		{
			get
			{
				return this._slug;
			}
			set
			{
				if ((this._slug != value))
				{
					this.OnslugChanging(value);
					this.SendPropertyChanging();
					this._slug = value;
					this.SendPropertyChanged("slug");
					this.OnslugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogCategory_BlogPost_BlogCategory", Storage="_BlogPost_BlogCategories", ThisKey="blogCategoryID", OtherKey="blogCategoryID")]
		public EntitySet<BlogPost_BlogCategory> BlogPost_BlogCategories
		{
			get
			{
				return this._BlogPost_BlogCategories;
			}
			set
			{
				this._BlogPost_BlogCategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BlogPost_BlogCategories(BlogPost_BlogCategory entity)
		{
			this.SendPropertyChanging();
			entity.BlogCategory = this;
		}
		
		private void detach_BlogPost_BlogCategories(BlogPost_BlogCategory entity)
		{
			this.SendPropertyChanging();
			entity.BlogCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlogPost_BlogCategory")]
	public partial class BlogPost_BlogCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _postCategoryID;
		
		private int _blogPostID;
		
		private int _blogCategoryID;
		
		private EntityRef<BlogCategory> _BlogCategory;
		
		private EntityRef<BlogPost> _BlogPost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpostCategoryIDChanging(int value);
    partial void OnpostCategoryIDChanged();
    partial void OnblogPostIDChanging(int value);
    partial void OnblogPostIDChanged();
    partial void OnblogCategoryIDChanging(int value);
    partial void OnblogCategoryIDChanged();
    #endregion
		
		public BlogPost_BlogCategory()
		{
			this._BlogCategory = default(EntityRef<BlogCategory>);
			this._BlogPost = default(EntityRef<BlogPost>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postCategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int postCategoryID
		{
			get
			{
				return this._postCategoryID;
			}
			set
			{
				if ((this._postCategoryID != value))
				{
					this.OnpostCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._postCategoryID = value;
					this.SendPropertyChanged("postCategoryID");
					this.OnpostCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blogPostID", DbType="Int NOT NULL")]
		public int blogPostID
		{
			get
			{
				return this._blogPostID;
			}
			set
			{
				if ((this._blogPostID != value))
				{
					if (this._BlogPost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnblogPostIDChanging(value);
					this.SendPropertyChanging();
					this._blogPostID = value;
					this.SendPropertyChanged("blogPostID");
					this.OnblogPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blogCategoryID", DbType="Int NOT NULL")]
		public int blogCategoryID
		{
			get
			{
				return this._blogCategoryID;
			}
			set
			{
				if ((this._blogCategoryID != value))
				{
					if (this._BlogCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnblogCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._blogCategoryID = value;
					this.SendPropertyChanged("blogCategoryID");
					this.OnblogCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogCategory_BlogPost_BlogCategory", Storage="_BlogCategory", ThisKey="blogCategoryID", OtherKey="blogCategoryID", IsForeignKey=true)]
		public BlogCategory BlogCategory
		{
			get
			{
				return this._BlogCategory.Entity;
			}
			set
			{
				BlogCategory previousValue = this._BlogCategory.Entity;
				if (((previousValue != value) 
							|| (this._BlogCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlogCategory.Entity = null;
						previousValue.BlogPost_BlogCategories.Remove(this);
					}
					this._BlogCategory.Entity = value;
					if ((value != null))
					{
						value.BlogPost_BlogCategories.Add(this);
						this._blogCategoryID = value.blogCategoryID;
					}
					else
					{
						this._blogCategoryID = default(int);
					}
					this.SendPropertyChanged("BlogCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogPost_BlogPost_BlogCategory", Storage="_BlogPost", ThisKey="blogPostID", OtherKey="blogPostID", IsForeignKey=true)]
		public BlogPost BlogPost
		{
			get
			{
				return this._BlogPost.Entity;
			}
			set
			{
				BlogPost previousValue = this._BlogPost.Entity;
				if (((previousValue != value) 
							|| (this._BlogPost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlogPost.Entity = null;
						previousValue.BlogPost_BlogCategories.Remove(this);
					}
					this._BlogPost.Entity = value;
					if ((value != null))
					{
						value.BlogPost_BlogCategories.Add(this);
						this._blogPostID = value.blogPostID;
					}
					else
					{
						this._blogPostID = default(int);
					}
					this.SendPropertyChanged("BlogPost");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BlogPosts")]
	public partial class BlogPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _blogPostID;
		
		private string _post_title;
		
		private string _slug;
		
		private string _post_text;
		
		private System.Nullable<System.DateTime> _publishedDate;
		
		private System.DateTime _createdDate;
		
		private System.DateTime _lastModified;
		
		private int _profileID;
		
		private string _meta_title;
		
		private string _meta_description;
		
		private string _keywords;
		
		private bool _active;
		
		private EntitySet<BlogPost_BlogCategory> _BlogPost_BlogCategories;
		
		private EntitySet<Comment> _Comments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnblogPostIDChanging(int value);
    partial void OnblogPostIDChanged();
    partial void Onpost_titleChanging(string value);
    partial void Onpost_titleChanged();
    partial void OnslugChanging(string value);
    partial void OnslugChanged();
    partial void Onpost_textChanging(string value);
    partial void Onpost_textChanged();
    partial void OnpublishedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnpublishedDateChanged();
    partial void OncreatedDateChanging(System.DateTime value);
    partial void OncreatedDateChanged();
    partial void OnlastModifiedChanging(System.DateTime value);
    partial void OnlastModifiedChanged();
    partial void OnprofileIDChanging(int value);
    partial void OnprofileIDChanged();
    partial void Onmeta_titleChanging(string value);
    partial void Onmeta_titleChanged();
    partial void Onmeta_descriptionChanging(string value);
    partial void Onmeta_descriptionChanged();
    partial void OnkeywordsChanging(string value);
    partial void OnkeywordsChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public BlogPost()
		{
			this._BlogPost_BlogCategories = new EntitySet<BlogPost_BlogCategory>(new Action<BlogPost_BlogCategory>(this.attach_BlogPost_BlogCategories), new Action<BlogPost_BlogCategory>(this.detach_BlogPost_BlogCategories));
			this._Comments = new EntitySet<Comment>(new Action<Comment>(this.attach_Comments), new Action<Comment>(this.detach_Comments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blogPostID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int blogPostID
		{
			get
			{
				return this._blogPostID;
			}
			set
			{
				if ((this._blogPostID != value))
				{
					this.OnblogPostIDChanging(value);
					this.SendPropertyChanging();
					this._blogPostID = value;
					this.SendPropertyChanged("blogPostID");
					this.OnblogPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_title", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string post_title
		{
			get
			{
				return this._post_title;
			}
			set
			{
				if ((this._post_title != value))
				{
					this.Onpost_titleChanging(value);
					this.SendPropertyChanging();
					this._post_title = value;
					this.SendPropertyChanged("post_title");
					this.Onpost_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_slug", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string slug
		{
			get
			{
				return this._slug;
			}
			set
			{
				if ((this._slug != value))
				{
					this.OnslugChanging(value);
					this.SendPropertyChanging();
					this._slug = value;
					this.SendPropertyChanged("slug");
					this.OnslugChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_post_text", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string post_text
		{
			get
			{
				return this._post_text;
			}
			set
			{
				if ((this._post_text != value))
				{
					this.Onpost_textChanging(value);
					this.SendPropertyChanging();
					this._post_text = value;
					this.SendPropertyChanged("post_text");
					this.Onpost_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_publishedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> publishedDate
		{
			get
			{
				return this._publishedDate;
			}
			set
			{
				if ((this._publishedDate != value))
				{
					this.OnpublishedDateChanging(value);
					this.SendPropertyChanging();
					this._publishedDate = value;
					this.SendPropertyChanged("publishedDate");
					this.OnpublishedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdDate", DbType="DateTime NOT NULL")]
		public System.DateTime createdDate
		{
			get
			{
				return this._createdDate;
			}
			set
			{
				if ((this._createdDate != value))
				{
					this.OncreatedDateChanging(value);
					this.SendPropertyChanging();
					this._createdDate = value;
					this.SendPropertyChanged("createdDate");
					this.OncreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastModified", DbType="DateTime NOT NULL")]
		public System.DateTime lastModified
		{
			get
			{
				return this._lastModified;
			}
			set
			{
				if ((this._lastModified != value))
				{
					this.OnlastModifiedChanging(value);
					this.SendPropertyChanging();
					this._lastModified = value;
					this.SendPropertyChanged("lastModified");
					this.OnlastModifiedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profileID", DbType="Int NOT NULL")]
		public int profileID
		{
			get
			{
				return this._profileID;
			}
			set
			{
				if ((this._profileID != value))
				{
					this.OnprofileIDChanging(value);
					this.SendPropertyChanging();
					this._profileID = value;
					this.SendPropertyChanged("profileID");
					this.OnprofileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meta_title", DbType="NVarChar(255)")]
		public string meta_title
		{
			get
			{
				return this._meta_title;
			}
			set
			{
				if ((this._meta_title != value))
				{
					this.Onmeta_titleChanging(value);
					this.SendPropertyChanging();
					this._meta_title = value;
					this.SendPropertyChanged("meta_title");
					this.Onmeta_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meta_description", DbType="NVarChar(255)")]
		public string meta_description
		{
			get
			{
				return this._meta_description;
			}
			set
			{
				if ((this._meta_description != value))
				{
					this.Onmeta_descriptionChanging(value);
					this.SendPropertyChanging();
					this._meta_description = value;
					this.SendPropertyChanged("meta_description");
					this.Onmeta_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keywords", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string keywords
		{
			get
			{
				return this._keywords;
			}
			set
			{
				if ((this._keywords != value))
				{
					this.OnkeywordsChanging(value);
					this.SendPropertyChanging();
					this._keywords = value;
					this.SendPropertyChanged("keywords");
					this.OnkeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogPost_BlogPost_BlogCategory", Storage="_BlogPost_BlogCategories", ThisKey="blogPostID", OtherKey="blogPostID")]
		public EntitySet<BlogPost_BlogCategory> BlogPost_BlogCategories
		{
			get
			{
				return this._BlogPost_BlogCategories;
			}
			set
			{
				this._BlogPost_BlogCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogPost_Comment", Storage="_Comments", ThisKey="blogPostID", OtherKey="blogPostID")]
		public EntitySet<Comment> Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				this._Comments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BlogPost_BlogCategories(BlogPost_BlogCategory entity)
		{
			this.SendPropertyChanging();
			entity.BlogPost = this;
		}
		
		private void detach_BlogPost_BlogCategories(BlogPost_BlogCategory entity)
		{
			this.SendPropertyChanging();
			entity.BlogPost = null;
		}
		
		private void attach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.BlogPost = this;
		}
		
		private void detach_Comments(Comment entity)
		{
			this.SendPropertyChanging();
			entity.BlogPost = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cart")]
	public partial class Cart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _cust_id;
		
		private int _payment_id;
		
		private decimal _shipping_price;
		
		private System.DateTime _date_created;
		
		private System.Data.Linq.Binary _last_updated;
		
		private int _ship_to;
		
		private string _shipping_type;
		
		private int _bill_to;
		
		private decimal _tax;
		
		private string _tracking_number;
		
		private bool _voided;
		
		private EntitySet<CartItem> _CartItems;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Payment> _Payment;
		
		private EntityRef<Address> _Billing;
		
		private EntityRef<Address> _Shipping;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Oncust_idChanging(int value);
    partial void Oncust_idChanged();
    partial void Onpayment_idChanging(int value);
    partial void Onpayment_idChanged();
    partial void Onshipping_priceChanging(decimal value);
    partial void Onshipping_priceChanged();
    partial void Ondate_createdChanging(System.DateTime value);
    partial void Ondate_createdChanged();
    partial void Onlast_updatedChanging(System.Data.Linq.Binary value);
    partial void Onlast_updatedChanged();
    partial void Onship_toChanging(int value);
    partial void Onship_toChanged();
    partial void Onshipping_typeChanging(string value);
    partial void Onshipping_typeChanged();
    partial void Onbill_toChanging(int value);
    partial void Onbill_toChanged();
    partial void OntaxChanging(decimal value);
    partial void OntaxChanged();
    partial void Ontracking_numberChanging(string value);
    partial void Ontracking_numberChanged();
    partial void OnvoidedChanging(bool value);
    partial void OnvoidedChanged();
    #endregion
		
		public Cart()
		{
			this._CartItems = new EntitySet<CartItem>(new Action<CartItem>(this.attach_CartItems), new Action<CartItem>(this.detach_CartItems));
			this._Customer = default(EntityRef<Customer>);
			this._Payment = default(EntityRef<Payment>);
			this._Billing = default(EntityRef<Address>);
			this._Shipping = default(EntityRef<Address>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cust_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int cust_id
		{
			get
			{
				return this._cust_id;
			}
			set
			{
				if ((this._cust_id != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncust_idChanging(value);
					this.SendPropertyChanging();
					this._cust_id = value;
					this.SendPropertyChanged("cust_id");
					this.Oncust_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int payment_id
		{
			get
			{
				return this._payment_id;
			}
			set
			{
				if ((this._payment_id != value))
				{
					if (this._Payment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpayment_idChanging(value);
					this.SendPropertyChanging();
					this._payment_id = value;
					this.SendPropertyChanged("payment_id");
					this.Onpayment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipping_price", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal shipping_price
		{
			get
			{
				return this._shipping_price;
			}
			set
			{
				if ((this._shipping_price != value))
				{
					this.Onshipping_priceChanging(value);
					this.SendPropertyChanging();
					this._shipping_price = value;
					this.SendPropertyChanged("shipping_price");
					this.Onshipping_priceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_created", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public System.DateTime date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_updated", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary last_updated
		{
			get
			{
				return this._last_updated;
			}
			set
			{
				if ((this._last_updated != value))
				{
					this.Onlast_updatedChanging(value);
					this.SendPropertyChanging();
					this._last_updated = value;
					this.SendPropertyChanged("last_updated");
					this.Onlast_updatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ship_to", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int ship_to
		{
			get
			{
				return this._ship_to;
			}
			set
			{
				if ((this._ship_to != value))
				{
					if (this._Shipping.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onship_toChanging(value);
					this.SendPropertyChanging();
					this._ship_to = value;
					this.SendPropertyChanged("ship_to");
					this.Onship_toChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipping_type", DbType="VarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string shipping_type
		{
			get
			{
				return this._shipping_type;
			}
			set
			{
				if ((this._shipping_type != value))
				{
					this.Onshipping_typeChanging(value);
					this.SendPropertyChanging();
					this._shipping_type = value;
					this.SendPropertyChanged("shipping_type");
					this.Onshipping_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bill_to", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int bill_to
		{
			get
			{
				return this._bill_to;
			}
			set
			{
				if ((this._bill_to != value))
				{
					if (this._Billing.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbill_toChanging(value);
					this.SendPropertyChanging();
					this._bill_to = value;
					this.SendPropertyChanged("bill_to");
					this.Onbill_toChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tax", DbType="Decimal(18,2) NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public decimal tax
		{
			get
			{
				return this._tax;
			}
			set
			{
				if ((this._tax != value))
				{
					this.OntaxChanging(value);
					this.SendPropertyChanging();
					this._tax = value;
					this.SendPropertyChanged("tax");
					this.OntaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tracking_number", DbType="VarChar(300)", UpdateCheck=UpdateCheck.Never)]
		public string tracking_number
		{
			get
			{
				return this._tracking_number;
			}
			set
			{
				if ((this._tracking_number != value))
				{
					this.Ontracking_numberChanging(value);
					this.SendPropertyChanging();
					this._tracking_number = value;
					this.SendPropertyChanged("tracking_number");
					this.Ontracking_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voided", DbType="Bit NOT NULL")]
		public bool voided
		{
			get
			{
				return this._voided;
			}
			set
			{
				if ((this._voided != value))
				{
					this.OnvoidedChanging(value);
					this.SendPropertyChanging();
					this._voided = value;
					this.SendPropertyChanged("voided");
					this.OnvoidedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cart_CartItem", Storage="_CartItems", ThisKey="ID", OtherKey="order_id")]
		public EntitySet<CartItem> CartItems
		{
			get
			{
				return this._CartItems;
			}
			set
			{
				this._CartItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Cart", Storage="_Customer", ThisKey="cust_id", OtherKey="ID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.Carts.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.Carts.Add(this);
						this._cust_id = value.ID;
					}
					else
					{
						this._cust_id = default(int);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Cart", Storage="_Payment", ThisKey="payment_id", OtherKey="ID", IsForeignKey=true)]
		public Payment Payment
		{
			get
			{
				return this._Payment.Entity;
			}
			set
			{
				Payment previousValue = this._Payment.Entity;
				if (((previousValue != value) 
							|| (this._Payment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Payment.Entity = null;
						previousValue.Carts.Remove(this);
					}
					this._Payment.Entity = value;
					if ((value != null))
					{
						value.Carts.Add(this);
						this._payment_id = value.ID;
					}
					else
					{
						this._payment_id = default(int);
					}
					this.SendPropertyChanged("Payment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Cart", Storage="_Billing", ThisKey="bill_to", OtherKey="ID", IsForeignKey=true)]
		public Address Billing
		{
			get
			{
				return this._Billing.Entity;
			}
			set
			{
				Address previousValue = this._Billing.Entity;
				if (((previousValue != value) 
							|| (this._Billing.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Billing.Entity = null;
						previousValue.Carts = null;
					}
					this._Billing.Entity = value;
					if ((value != null))
					{
						value.Carts = this;
						this._bill_to = value.ID;
					}
					else
					{
						this._bill_to = default(int);
					}
					this.SendPropertyChanged("Billing");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Cart1", Storage="_Shipping", ThisKey="ship_to", OtherKey="ID", IsForeignKey=true)]
		public Address Shipping
		{
			get
			{
				return this._Shipping.Entity;
			}
			set
			{
				Address previousValue = this._Shipping.Entity;
				if (((previousValue != value) 
							|| (this._Shipping.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Shipping.Entity = null;
						previousValue.Carts1 = null;
					}
					this._Shipping.Entity = value;
					if ((value != null))
					{
						value.Carts1 = this;
						this._ship_to = value.ID;
					}
					else
					{
						this._ship_to = default(int);
					}
					this.SendPropertyChanged("Shipping");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CartItems(CartItem entity)
		{
			this.SendPropertyChanging();
			entity.Cart = this;
		}
		
		private void detach_CartItems(CartItem entity)
		{
			this.SendPropertyChanging();
			entity.Cart = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CartItem")]
	public partial class CartItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _partID;
		
		private int _quantity;
		
		private decimal _price;
		
		private int _order_id;
		
		private string _shortDesc;
		
		private string _upc;
		
		private System.Nullable<decimal> _weight;
		
		private EntityRef<Cart> _Cart;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnpartIDChanging(int value);
    partial void OnpartIDChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void Onorder_idChanging(int value);
    partial void Onorder_idChanged();
    partial void OnshortDescChanging(string value);
    partial void OnshortDescChanged();
    partial void OnupcChanging(string value);
    partial void OnupcChanged();
    partial void OnweightChanging(System.Nullable<decimal> value);
    partial void OnweightChanged();
    #endregion
		
		public CartItem()
		{
			this._Cart = default(EntityRef<Cart>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partID", DbType="Int NOT NULL")]
		public int partID
		{
			get
			{
				return this._partID;
			}
			set
			{
				if ((this._partID != value))
				{
					this.OnpartIDChanging(value);
					this.SendPropertyChanging();
					this._partID = value;
					this.SendPropertyChanged("partID");
					this.OnpartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_order_id", DbType="Int NOT NULL")]
		public int order_id
		{
			get
			{
				return this._order_id;
			}
			set
			{
				if ((this._order_id != value))
				{
					if (this._Cart.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onorder_idChanging(value);
					this.SendPropertyChanging();
					this._order_id = value;
					this.SendPropertyChanged("order_id");
					this.Onorder_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shortDesc", DbType="VarChar(255)")]
		public string shortDesc
		{
			get
			{
				return this._shortDesc;
			}
			set
			{
				if ((this._shortDesc != value))
				{
					this.OnshortDescChanging(value);
					this.SendPropertyChanging();
					this._shortDesc = value;
					this.SendPropertyChanged("shortDesc");
					this.OnshortDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_upc", DbType="VarChar(50)")]
		public string upc
		{
			get
			{
				return this._upc;
			}
			set
			{
				if ((this._upc != value))
				{
					this.OnupcChanging(value);
					this.SendPropertyChanging();
					this._upc = value;
					this.SendPropertyChanged("upc");
					this.OnupcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Decimal NOT NULL")]
		public System.Nullable<decimal> weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cart_CartItem", Storage="_Cart", ThisKey="order_id", OtherKey="ID", IsForeignKey=true)]
		internal Cart Cart
		{
			get
			{
				return this._Cart.Entity;
			}
			set
			{
				Cart previousValue = this._Cart.Entity;
				if (((previousValue != value) 
							|| (this._Cart.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cart.Entity = null;
						previousValue.CartItems.Remove(this);
					}
					this._Cart.Entity = value;
					if ((value != null))
					{
						value.CartItems.Add(this);
						this._order_id = value.ID;
					}
					else
					{
						this._order_id = default(int);
					}
					this.SendPropertyChanged("Cart");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Comments")]
	public partial class Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _commentID;
		
		private int _blogPostID;
		
		private string _name;
		
		private string _email;
		
		private string _comment_text;
		
		private System.DateTime _createdDate;
		
		private bool _approved;
		
		private bool _active;
		
		private EntityRef<BlogPost> _BlogPost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncommentIDChanging(int value);
    partial void OncommentIDChanged();
    partial void OnblogPostIDChanging(int value);
    partial void OnblogPostIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Oncomment_textChanging(string value);
    partial void Oncomment_textChanged();
    partial void OncreatedDateChanging(System.DateTime value);
    partial void OncreatedDateChanged();
    partial void OnapprovedChanging(bool value);
    partial void OnapprovedChanged();
    partial void OnactiveChanging(bool value);
    partial void OnactiveChanged();
    #endregion
		
		public Comment()
		{
			this._BlogPost = default(EntityRef<BlogPost>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_commentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int commentID
		{
			get
			{
				return this._commentID;
			}
			set
			{
				if ((this._commentID != value))
				{
					this.OncommentIDChanging(value);
					this.SendPropertyChanging();
					this._commentID = value;
					this.SendPropertyChanged("commentID");
					this.OncommentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blogPostID", DbType="Int NOT NULL")]
		public int blogPostID
		{
			get
			{
				return this._blogPostID;
			}
			set
			{
				if ((this._blogPostID != value))
				{
					if (this._BlogPost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnblogPostIDChanging(value);
					this.SendPropertyChanging();
					this._blogPostID = value;
					this.SendPropertyChanged("blogPostID");
					this.OnblogPostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(255)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment_text", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string comment_text
		{
			get
			{
				return this._comment_text;
			}
			set
			{
				if ((this._comment_text != value))
				{
					this.Oncomment_textChanging(value);
					this.SendPropertyChanging();
					this._comment_text = value;
					this.SendPropertyChanged("comment_text");
					this.Oncomment_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdDate", DbType="DateTime NOT NULL")]
		public System.DateTime createdDate
		{
			get
			{
				return this._createdDate;
			}
			set
			{
				if ((this._createdDate != value))
				{
					this.OncreatedDateChanging(value);
					this.SendPropertyChanging();
					this._createdDate = value;
					this.SendPropertyChanged("createdDate");
					this.OncreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_approved", DbType="Bit NOT NULL")]
		public bool approved
		{
			get
			{
				return this._approved;
			}
			set
			{
				if ((this._approved != value))
				{
					this.OnapprovedChanging(value);
					this.SendPropertyChanging();
					this._approved = value;
					this.SendPropertyChanged("approved");
					this.OnapprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_active", DbType="Bit NOT NULL")]
		public bool active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BlogPost_Comment", Storage="_BlogPost", ThisKey="blogPostID", OtherKey="blogPostID", IsForeignKey=true)]
		public BlogPost BlogPost
		{
			get
			{
				return this._BlogPost.Entity;
			}
			set
			{
				BlogPost previousValue = this._BlogPost.Entity;
				if (((previousValue != value) 
							|| (this._BlogPost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BlogPost.Entity = null;
						previousValue.Comments.Remove(this);
					}
					this._BlogPost.Entity = value;
					if ((value != null))
					{
						value.Comments.Add(this);
						this._blogPostID = value.blogPostID;
					}
					else
					{
						this._blogPostID = default(int);
					}
					this.SendPropertyChanged("BlogPost");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactInquiries")]
	public partial class ContactInquiry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _name;
		
		private string _phone;
		
		private string _email;
		
		private string _message;
		
		private int _contact_type;
		
		private System.DateTime _dateAdded;
		
		private int _followedUp;
		
		private EntityRef<ContactType> _ContactType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    partial void Oncontact_typeChanging(int value);
    partial void Oncontact_typeChanged();
    partial void OndateAddedChanging(System.DateTime value);
    partial void OndateAddedChanged();
    partial void OnfollowedUpChanging(int value);
    partial void OnfollowedUpChanged();
    #endregion
		
		public ContactInquiry()
		{
			this._ContactType = default(EntityRef<ContactType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(50)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contact_type", DbType="Int NOT NULL")]
		public int contact_type
		{
			get
			{
				return this._contact_type;
			}
			set
			{
				if ((this._contact_type != value))
				{
					this.Oncontact_typeChanging(value);
					this.SendPropertyChanging();
					this._contact_type = value;
					this.SendPropertyChanged("contact_type");
					this.Oncontact_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime dateAdded
		{
			get
			{
				return this._dateAdded;
			}
			set
			{
				if ((this._dateAdded != value))
				{
					this.OndateAddedChanging(value);
					this.SendPropertyChanging();
					this._dateAdded = value;
					this.SendPropertyChanged("dateAdded");
					this.OndateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_followedUp", DbType="Int NOT NULL")]
		public int followedUp
		{
			get
			{
				return this._followedUp;
			}
			set
			{
				if ((this._followedUp != value))
				{
					this.OnfollowedUpChanging(value);
					this.SendPropertyChanging();
					this._followedUp = value;
					this.SendPropertyChanged("followedUp");
					this.OnfollowedUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContactInquiry_ContactType", Storage="_ContactType", ThisKey="contact_type", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public ContactType ContactType
		{
			get
			{
				return this._ContactType.Entity;
			}
			set
			{
				ContactType previousValue = this._ContactType.Entity;
				if (((previousValue != value) 
							|| (this._ContactType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContactType.Entity = null;
						previousValue.ContactInquiry = null;
					}
					this._ContactType.Entity = value;
					if ((value != null))
					{
						value.ContactInquiry = this;
					}
					this.SendPropertyChanged("ContactType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactTypes")]
	public partial class ContactType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _label;
		
		private string _email;
		
		private EntityRef<ContactInquiry> _ContactInquiry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnlabelChanging(string value);
    partial void OnlabelChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public ContactType()
		{
			this._ContactInquiry = default(EntityRef<ContactInquiry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._ContactInquiry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_label", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string label
		{
			get
			{
				return this._label;
			}
			set
			{
				if ((this._label != value))
				{
					this.OnlabelChanging(value);
					this.SendPropertyChanging();
					this._label = value;
					this.SendPropertyChanged("label");
					this.OnlabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContactInquiry_ContactType", Storage="_ContactInquiry", ThisKey="ID", OtherKey="contact_type", IsForeignKey=true)]
		internal ContactInquiry ContactInquiry
		{
			get
			{
				return this._ContactInquiry.Entity;
			}
			set
			{
				ContactInquiry previousValue = this._ContactInquiry.Entity;
				if (((previousValue != value) 
							|| (this._ContactInquiry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContactInquiry.Entity = null;
						previousValue.ContactType = null;
					}
					this._ContactInquiry.Entity = value;
					if ((value != null))
					{
						value.ContactType = this;
						this._ID = value.contact_type;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("ContactInquiry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContentNesting")]
	public partial class ContentNesting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _pageID;
		
		private int _parentID;
		
		private EntitySet<ContentPage> _ContentPages;
		
		private EntityRef<ContentPage> _ContentPage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnpageIDChanging(int value);
    partial void OnpageIDChanged();
    partial void OnparentIDChanging(int value);
    partial void OnparentIDChanged();
    #endregion
		
		public ContentNesting()
		{
			this._ContentPages = new EntitySet<ContentPage>(new Action<ContentPage>(this.attach_ContentPages), new Action<ContentPage>(this.detach_ContentPages));
			this._ContentPage = default(EntityRef<ContentPage>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageID", DbType="Int NOT NULL")]
		public int pageID
		{
			get
			{
				return this._pageID;
			}
			set
			{
				if ((this._pageID != value))
				{
					this.OnpageIDChanging(value);
					this.SendPropertyChanging();
					this._pageID = value;
					this.SendPropertyChanged("pageID");
					this.OnpageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentID", DbType="Int NOT NULL")]
		public int parentID
		{
			get
			{
				return this._parentID;
			}
			set
			{
				if ((this._parentID != value))
				{
					if (this._ContentPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnparentIDChanging(value);
					this.SendPropertyChanging();
					this._parentID = value;
					this.SendPropertyChanged("parentID");
					this.OnparentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentNesting_ContentPage", Storage="_ContentPages", ThisKey="pageID", OtherKey="ID")]
		internal EntitySet<ContentPage> ContentPages
		{
			get
			{
				return this._ContentPages;
			}
			set
			{
				this._ContentPages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentPage_ContentNesting", Storage="_ContentPage", ThisKey="parentID", OtherKey="ID", IsForeignKey=true)]
		public ContentPage ContentPage
		{
			get
			{
				return this._ContentPage.Entity;
			}
			set
			{
				ContentPage previousValue = this._ContentPage.Entity;
				if (((previousValue != value) 
							|| (this._ContentPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentPage.Entity = null;
						previousValue.ContentNestings.Remove(this);
					}
					this._ContentPage.Entity = value;
					if ((value != null))
					{
						value.ContentNestings.Add(this);
						this._parentID = value.ID;
					}
					else
					{
						this._parentID = default(int);
					}
					this.SendPropertyChanged("ContentPage");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContentPages(ContentPage entity)
		{
			this.SendPropertyChanging();
			entity.ContentNesting = this;
		}
		
		private void detach_ContentPages(ContentPage entity)
		{
			this.SendPropertyChanging();
			entity.ContentNesting = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContentPage")]
	public partial class ContentPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Title;
		
		private string _content;
		
		private int _visible;
		
		private string _metaTitle;
		
		private string _metaDescription;
		
		private EntitySet<ContentNesting> _ContentNestings;
		
		private EntityRef<ContentNesting> _ContentNesting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OncontentChanging(string value);
    partial void OncontentChanged();
    partial void OnvisibleChanging(int value);
    partial void OnvisibleChanged();
    partial void OnmetaTitleChanging(string value);
    partial void OnmetaTitleChanged();
    partial void OnmetaDescriptionChanging(string value);
    partial void OnmetaDescriptionChanged();
    #endregion
		
		public ContentPage()
		{
			this._ContentNestings = new EntitySet<ContentNesting>(new Action<ContentNesting>(this.attach_ContentNestings), new Action<ContentNesting>(this.detach_ContentNestings));
			this._ContentNesting = default(EntityRef<ContentNesting>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._ContentNesting.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_content", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string content
		{
			get
			{
				return this._content;
			}
			set
			{
				if ((this._content != value))
				{
					this.OncontentChanging(value);
					this.SendPropertyChanging();
					this._content = value;
					this.SendPropertyChanged("content");
					this.OncontentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_visible", DbType="Int NOT NULL")]
		public int visible
		{
			get
			{
				return this._visible;
			}
			set
			{
				if ((this._visible != value))
				{
					this.OnvisibleChanging(value);
					this.SendPropertyChanging();
					this._visible = value;
					this.SendPropertyChanged("visible");
					this.OnvisibleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_metaTitle", DbType="VarChar(255) NULL")]
		public string metaTitle
		{
			get
			{
				return this._metaTitle;
			}
			set
			{
				if ((this._metaTitle != value))
				{
					this.OnmetaTitleChanging(value);
					this.SendPropertyChanging();
					this._metaTitle = value;
					this.SendPropertyChanged("metaTitle");
					this.OnmetaTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_metaDescription", DbType="VarChar(255) NULL")]
		public string metaDescription
		{
			get
			{
				return this._metaDescription;
			}
			set
			{
				if ((this._metaDescription != value))
				{
					this.OnmetaDescriptionChanging(value);
					this.SendPropertyChanging();
					this._metaDescription = value;
					this.SendPropertyChanged("metaDescription");
					this.OnmetaDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentPage_ContentNesting", Storage="_ContentNestings", ThisKey="ID", OtherKey="parentID")]
		public EntitySet<ContentNesting> ContentNestings
		{
			get
			{
				return this._ContentNestings;
			}
			set
			{
				this._ContentNestings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContentNesting_ContentPage", Storage="_ContentNesting", ThisKey="ID", OtherKey="pageID", IsForeignKey=true)]
		public ContentNesting ContentNesting
		{
			get
			{
				return this._ContentNesting.Entity;
			}
			set
			{
				ContentNesting previousValue = this._ContentNesting.Entity;
				if (((previousValue != value) 
							|| (this._ContentNesting.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContentNesting.Entity = null;
						previousValue.ContentPages.Remove(this);
					}
					this._ContentNesting.Entity = value;
					if ((value != null))
					{
						value.ContentPages.Add(this);
						this._ID = value.pageID;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("ContentNesting");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContentNestings(ContentNesting entity)
		{
			this.SendPropertyChanging();
			entity.ContentPage = this;
		}
		
		private void detach_ContentNestings(ContentNesting entity)
		{
			this.SendPropertyChanging();
			entity.ContentPage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Country")]
	public partial class Country : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _name;
		
		private string _abbr;
		
		private string _longAbbr;
		
		private EntitySet<State> _States;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnabbrChanging(string value);
    partial void OnabbrChanged();
    partial void OnlongAbbrChanging(string value);
    partial void OnlongAbbrChanged();
    #endregion
		
		public Country()
		{
			this._States = new EntitySet<State>(new Action<State>(this.attach_States), new Action<State>(this.detach_States));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_abbr", DbType="VarChar(10)")]
		public string abbr
		{
			get
			{
				return this._abbr;
			}
			set
			{
				if ((this._abbr != value))
				{
					this.OnabbrChanging(value);
					this.SendPropertyChanging();
					this._abbr = value;
					this.SendPropertyChanged("abbr");
					this.OnabbrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longAbbr", DbType="VarChar(5) NULL")]
		public string longAbbr
		{
			get
			{
				return this._longAbbr;
			}
			set
			{
				if ((this._longAbbr != value))
				{
					this.OnlongAbbrChanging(value);
					this.SendPropertyChanging();
					this._longAbbr = value;
					this.SendPropertyChanged("longAbbr");
					this.OnlongAbbrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_State", Storage="_States", ThisKey="ID", OtherKey="countryID")]
		internal EntitySet<State> States
		{
			get
			{
				return this._States;
			}
			set
			{
				this._States.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_States(State entity)
		{
			this.SendPropertyChanging();
			entity.Country = this;
		}
		
		private void detach_States(State entity)
		{
			this.SendPropertyChanging();
			entity.Country = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _email;
		
		private string _password;
		
		private string _fname;
		
		private string _lname;
		
		private string _phone;
		
		private System.DateTime _dateAdded;
		
		private int _isSuspended;
		
		private int _receiveNewsletter;
		
		private int _receiveOffers;
		
		private int _billingID;
		
		private int _shippingID;
		
		private int _isValidated;
		
		private System.Guid _validator;
		
		private EntitySet<Cart> _Carts;
		
		private EntityRef<Address> _Address;
		
		private EntityRef<Address> _Address1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnfnameChanging(string value);
    partial void OnfnameChanged();
    partial void OnlnameChanging(string value);
    partial void OnlnameChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OndateAddedChanging(System.DateTime value);
    partial void OndateAddedChanged();
    partial void OnisSuspendedChanging(int value);
    partial void OnisSuspendedChanged();
    partial void OnreceiveNewsletterChanging(int value);
    partial void OnreceiveNewsletterChanged();
    partial void OnreceiveOffersChanging(int value);
    partial void OnreceiveOffersChanged();
    partial void OnbillingIDChanging(int value);
    partial void OnbillingIDChanged();
    partial void OnshippingIDChanging(int value);
    partial void OnshippingIDChanged();
    partial void OnisValidatedChanging(int value);
    partial void OnisValidatedChanged();
    partial void OnvalidatorChanging(System.Guid value);
    partial void OnvalidatorChanged();
    #endregion
		
		public Customer()
		{
			this._Carts = new EntitySet<Cart>(new Action<Cart>(this.attach_Carts), new Action<Cart>(this.detach_Carts));
			this._Address = default(EntityRef<Address>);
			this._Address1 = default(EntityRef<Address>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this.OnfnameChanging(value);
					this.SendPropertyChanging();
					this._fname = value;
					this.SendPropertyChanged("fname");
					this.OnfnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lname", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string lname
		{
			get
			{
				return this._lname;
			}
			set
			{
				if ((this._lname != value))
				{
					this.OnlnameChanging(value);
					this.SendPropertyChanging();
					this._lname = value;
					this.SendPropertyChanged("lname");
					this.OnlnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(300)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime dateAdded
		{
			get
			{
				return this._dateAdded;
			}
			set
			{
				if ((this._dateAdded != value))
				{
					this.OndateAddedChanging(value);
					this.SendPropertyChanging();
					this._dateAdded = value;
					this.SendPropertyChanged("dateAdded");
					this.OndateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isSuspended", DbType="Int NOT NULL")]
		public int isSuspended
		{
			get
			{
				return this._isSuspended;
			}
			set
			{
				if ((this._isSuspended != value))
				{
					this.OnisSuspendedChanging(value);
					this.SendPropertyChanging();
					this._isSuspended = value;
					this.SendPropertyChanged("isSuspended");
					this.OnisSuspendedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiveNewsletter", DbType="Int NOT NULL")]
		public int receiveNewsletter
		{
			get
			{
				return this._receiveNewsletter;
			}
			set
			{
				if ((this._receiveNewsletter != value))
				{
					this.OnreceiveNewsletterChanging(value);
					this.SendPropertyChanging();
					this._receiveNewsletter = value;
					this.SendPropertyChanged("receiveNewsletter");
					this.OnreceiveNewsletterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_receiveOffers", DbType="Int NOT NULL")]
		public int receiveOffers
		{
			get
			{
				return this._receiveOffers;
			}
			set
			{
				if ((this._receiveOffers != value))
				{
					this.OnreceiveOffersChanging(value);
					this.SendPropertyChanging();
					this._receiveOffers = value;
					this.SendPropertyChanged("receiveOffers");
					this.OnreceiveOffersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billingID", DbType="Int NOT NULL")]
		public int billingID
		{
			get
			{
				return this._billingID;
			}
			set
			{
				if ((this._billingID != value))
				{
					if (this._Address.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbillingIDChanging(value);
					this.SendPropertyChanging();
					this._billingID = value;
					this.SendPropertyChanged("billingID");
					this.OnbillingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shippingID", DbType="Int NOT NULL")]
		public int shippingID
		{
			get
			{
				return this._shippingID;
			}
			set
			{
				if ((this._shippingID != value))
				{
					if (this._Address1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnshippingIDChanging(value);
					this.SendPropertyChanging();
					this._shippingID = value;
					this.SendPropertyChanged("shippingID");
					this.OnshippingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isValidated", DbType="Int NOT NULL")]
		public int isValidated
		{
			get
			{
				return this._isValidated;
			}
			set
			{
				if ((this._isValidated != value))
				{
					this.OnisValidatedChanging(value);
					this.SendPropertyChanging();
					this._isValidated = value;
					this.SendPropertyChanged("isValidated");
					this.OnisValidatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_validator", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid validator
		{
			get
			{
				return this._validator;
			}
			set
			{
				if ((this._validator != value))
				{
					this.OnvalidatorChanging(value);
					this.SendPropertyChanging();
					this._validator = value;
					this.SendPropertyChanged("validator");
					this.OnvalidatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_Cart", Storage="_Carts", ThisKey="ID", OtherKey="cust_id")]
		public EntitySet<Cart> Carts
		{
			get
			{
				return this._Carts;
			}
			set
			{
				this._Carts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Customer", Storage="_Address", ThisKey="billingID", OtherKey="ID", IsForeignKey=true)]
		public Address Address
		{
			get
			{
				return this._Address.Entity;
			}
			set
			{
				Address previousValue = this._Address.Entity;
				if (((previousValue != value) 
							|| (this._Address.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._Address.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._billingID = value.ID;
					}
					else
					{
						this._billingID = default(int);
					}
					this.SendPropertyChanged("Address");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Address_Customer1", Storage="_Address1", ThisKey="shippingID", OtherKey="ID", IsForeignKey=true)]
		public Address Address1
		{
			get
			{
				return this._Address1.Entity;
			}
			set
			{
				Address previousValue = this._Address1.Entity;
				if (((previousValue != value) 
							|| (this._Address1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Address1.Entity = null;
						previousValue.Customers1.Remove(this);
					}
					this._Address1.Entity = value;
					if ((value != null))
					{
						value.Customers1.Add(this);
						this._shippingID = value.ID;
					}
					else
					{
						this._shippingID = default(int);
					}
					this.SendPropertyChanged("Address1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FAQ")]
	public partial class FAQ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _question;
		
		private string _answer;
		
		private int _order;
		
		private int _topic;
		
		private EntityRef<FaqTopic> _FaqTopic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnquestionChanging(string value);
    partial void OnquestionChanged();
    partial void OnanswerChanging(string value);
    partial void OnanswerChanged();
    partial void OnorderChanging(int value);
    partial void OnorderChanged();
    partial void OntopicChanging(int value);
    partial void OntopicChanged();
    #endregion
		
		public FAQ()
		{
			this._FaqTopic = default(EntityRef<FaqTopic>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_question", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string question
		{
			get
			{
				return this._question;
			}
			set
			{
				if ((this._question != value))
				{
					this.OnquestionChanging(value);
					this.SendPropertyChanging();
					this._question = value;
					this.SendPropertyChanged("question");
					this.OnquestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_answer", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string answer
		{
			get
			{
				return this._answer;
			}
			set
			{
				if ((this._answer != value))
				{
					this.OnanswerChanging(value);
					this.SendPropertyChanging();
					this._answer = value;
					this.SendPropertyChanged("answer");
					this.OnanswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[order]", Storage="_order", DbType="Int NOT NULL")]
		public int order
		{
			get
			{
				return this._order;
			}
			set
			{
				if ((this._order != value))
				{
					this.OnorderChanging(value);
					this.SendPropertyChanging();
					this._order = value;
					this.SendPropertyChanged("order");
					this.OnorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_topic", DbType="Int NOT NULL")]
		public int topic
		{
			get
			{
				return this._topic;
			}
			set
			{
				if ((this._topic != value))
				{
					if (this._FaqTopic.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntopicChanging(value);
					this.SendPropertyChanging();
					this._topic = value;
					this.SendPropertyChanged("topic");
					this.OntopicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FaqTopic_FAQ", Storage="_FaqTopic", ThisKey="topic", OtherKey="ID", IsForeignKey=true)]
		public FaqTopic FaqTopic
		{
			get
			{
				return this._FaqTopic.Entity;
			}
			set
			{
				FaqTopic previousValue = this._FaqTopic.Entity;
				if (((previousValue != value) 
							|| (this._FaqTopic.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FaqTopic.Entity = null;
						previousValue.FAQs.Remove(this);
					}
					this._FaqTopic.Entity = value;
					if ((value != null))
					{
						value.FAQs.Add(this);
						this._topic = value.ID;
					}
					else
					{
						this._topic = default(int);
					}
					this.SendPropertyChanged("FaqTopic");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FaqTopic")]
	public partial class FaqTopic : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _topic;
		
		private System.DateTime _dateAdded;
		
		private EntitySet<FAQ> _FAQs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OntopicChanging(string value);
    partial void OntopicChanged();
    partial void OndateAddedChanging(System.DateTime value);
    partial void OndateAddedChanged();
    #endregion
		
		public FaqTopic()
		{
			this._FAQs = new EntitySet<FAQ>(new Action<FAQ>(this.attach_FAQs), new Action<FAQ>(this.detach_FAQs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_topic", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string topic
		{
			get
			{
				return this._topic;
			}
			set
			{
				if ((this._topic != value))
				{
					this.OntopicChanging(value);
					this.SendPropertyChanging();
					this._topic = value;
					this.SendPropertyChanged("topic");
					this.OntopicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime dateAdded
		{
			get
			{
				return this._dateAdded;
			}
			set
			{
				if ((this._dateAdded != value))
				{
					this.OndateAddedChanging(value);
					this.SendPropertyChanging();
					this._dateAdded = value;
					this.SendPropertyChanged("dateAdded");
					this.OndateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FaqTopic_FAQ", Storage="_FAQs", ThisKey="ID", OtherKey="topic")]
		public EntitySet<FAQ> FAQs
		{
			get
			{
				return this._FAQs;
			}
			set
			{
				this._FAQs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FAQs(FAQ entity)
		{
			this.SendPropertyChanging();
			entity.FaqTopic = this;
		}
		
		private void detach_FAQs(FAQ entity)
		{
			this.SendPropertyChanging();
			entity.FaqTopic = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Locations")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _locationID;
		
		private string _name;
		
		private string _phone;
		
		private string _fax;
		
		private string _email;
		
		private string _address;
		
		private string _city;
		
		private int _stateID;
		
		private System.Nullable<int> _zip;
		
		private int _isPrimary;
		
		private decimal _latitude;
		
		private decimal _longitude;
		
		private string _places_status;
		
		private string _places_reference;
		
		private string _places_id;
		
		private string _foursquare_id;
		
		private EntitySet<LocationService> _LocationServices;
		
		private EntitySet<State> _States;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlocationIDChanging(int value);
    partial void OnlocationIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstateIDChanging(int value);
    partial void OnstateIDChanged();
    partial void OnzipChanging(System.Nullable<int> value);
    partial void OnzipChanged();
    partial void OnisPrimaryChanging(int value);
    partial void OnisPrimaryChanged();
    partial void OnlatitudeChanging(decimal value);
    partial void OnlatitudeChanged();
    partial void OnlongitudeChanging(decimal value);
    partial void OnlongitudeChanged();
    partial void Onplaces_statusChanging(string value);
    partial void Onplaces_statusChanged();
    partial void Onplaces_referenceChanging(string value);
    partial void Onplaces_referenceChanged();
    partial void Onplaces_idChanging(string value);
    partial void Onplaces_idChanged();
    partial void Onfoursquare_idChanging(string value);
    partial void Onfoursquare_idChanged();
    #endregion
		
		public Location()
		{
			this._LocationServices = new EntitySet<LocationService>(new Action<LocationService>(this.attach_LocationServices), new Action<LocationService>(this.detach_LocationServices));
			this._States = new EntitySet<State>(new Action<State>(this.attach_States), new Action<State>(this.detach_States));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locationID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int locationID
		{
			get
			{
				return this._locationID;
			}
			set
			{
				if ((this._locationID != value))
				{
					this.OnlocationIDChanging(value);
					this.SendPropertyChanging();
					this._locationID = value;
					this.SendPropertyChanged("locationID");
					this.OnlocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(15)")]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="VarChar(15)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(255)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(500)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="VarChar(255)")]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateID", DbType="Int NOT NULL")]
		public int stateID
		{
			get
			{
				return this._stateID;
			}
			set
			{
				if ((this._stateID != value))
				{
					this.OnstateIDChanging(value);
					this.SendPropertyChanging();
					this._stateID = value;
					this.SendPropertyChanged("stateID");
					this.OnstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zip", DbType="Int")]
		public System.Nullable<int> zip
		{
			get
			{
				return this._zip;
			}
			set
			{
				if ((this._zip != value))
				{
					this.OnzipChanging(value);
					this.SendPropertyChanging();
					this._zip = value;
					this.SendPropertyChanged("zip");
					this.OnzipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPrimary", DbType="Int NOT NULL")]
		public int isPrimary
		{
			get
			{
				return this._isPrimary;
			}
			set
			{
				if ((this._isPrimary != value))
				{
					this.OnisPrimaryChanging(value);
					this.SendPropertyChanging();
					this._isPrimary = value;
					this.SendPropertyChanged("isPrimary");
					this.OnisPrimaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="Decimal(18,8) NOT NULL")]
		public decimal latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="Decimal(18,8) NOT NULL")]
		public decimal longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_places_status", DbType="VarChar(10)")]
		public string places_status
		{
			get
			{
				return this._places_status;
			}
			set
			{
				if ((this._places_status != value))
				{
					this.Onplaces_statusChanging(value);
					this.SendPropertyChanging();
					this._places_status = value;
					this.SendPropertyChanged("places_status");
					this.Onplaces_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_places_reference", DbType="VarChar(300)")]
		public string places_reference
		{
			get
			{
				return this._places_reference;
			}
			set
			{
				if ((this._places_reference != value))
				{
					this.Onplaces_referenceChanging(value);
					this.SendPropertyChanging();
					this._places_reference = value;
					this.SendPropertyChanged("places_reference");
					this.Onplaces_referenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_places_id", DbType="VarChar(300)")]
		public string places_id
		{
			get
			{
				return this._places_id;
			}
			set
			{
				if ((this._places_id != value))
				{
					this.Onplaces_idChanging(value);
					this.SendPropertyChanging();
					this._places_id = value;
					this.SendPropertyChanged("places_id");
					this.Onplaces_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_foursquare_id", DbType="VarChar(400)")]
		public string foursquare_id
		{
			get
			{
				return this._foursquare_id;
			}
			set
			{
				if ((this._foursquare_id != value))
				{
					this.Onfoursquare_idChanging(value);
					this.SendPropertyChanging();
					this._foursquare_id = value;
					this.SendPropertyChanged("foursquare_id");
					this.Onfoursquare_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_LocationService", Storage="_LocationServices", ThisKey="locationID", OtherKey="locationID")]
		public EntitySet<LocationService> LocationServices
		{
			get
			{
				return this._LocationServices;
			}
			set
			{
				this._LocationServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_State", Storage="_States", ThisKey="stateID", OtherKey="stateID")]
		public EntitySet<State> States
		{
			get
			{
				return this._States;
			}
			set
			{
				this._States.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LocationServices(LocationService entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_LocationServices(LocationService entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
		
		private void attach_States(State entity)
		{
			this.SendPropertyChanging();
			entity.Location = this;
		}
		
		private void detach_States(State entity)
		{
			this.SendPropertyChanging();
			entity.Location = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LocationServices")]
	public partial class LocationService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _locationID;
		
		private int _serviceID;
		
		private EntityRef<Location> _Location;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnlocationIDChanging(int value);
    partial void OnlocationIDChanged();
    partial void OnserviceIDChanging(int value);
    partial void OnserviceIDChanged();
    #endregion
		
		public LocationService()
		{
			this._Location = default(EntityRef<Location>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locationID", DbType="Int NOT NULL")]
		public int locationID
		{
			get
			{
				return this._locationID;
			}
			set
			{
				if ((this._locationID != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnlocationIDChanging(value);
					this.SendPropertyChanging();
					this._locationID = value;
					this.SendPropertyChanged("locationID");
					this.OnlocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serviceID", DbType="Int NOT NULL")]
		public int serviceID
		{
			get
			{
				return this._serviceID;
			}
			set
			{
				if ((this._serviceID != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserviceIDChanging(value);
					this.SendPropertyChanging();
					this._serviceID = value;
					this.SendPropertyChanged("serviceID");
					this.OnserviceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_LocationService", Storage="_Location", ThisKey="locationID", OtherKey="locationID", IsForeignKey=true)]
		public Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.LocationServices.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.LocationServices.Add(this);
						this._locationID = value.locationID;
					}
					else
					{
						this._locationID = default(int);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_LocationService", Storage="_Service", ThisKey="serviceID", OtherKey="ID", IsForeignKey=true)]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.LocationServices.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.LocationServices.Add(this);
						this._serviceID = value.ID;
					}
					else
					{
						this._serviceID = default(int);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Modules")]
	public partial class Module : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _path;
		
		private int _parentID;
		
		private string _alt_text;
		
		private int _inMenu;
		
		private string _image;
		
		private EntitySet<ProfileModule> _ProfileModules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpathChanging(string value);
    partial void OnpathChanged();
    partial void OnparentIDChanging(int value);
    partial void OnparentIDChanged();
    partial void Onalt_textChanging(string value);
    partial void Onalt_textChanged();
    partial void OninMenuChanging(int value);
    partial void OninMenuChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    #endregion
		
		public Module()
		{
			this._ProfileModules = new EntitySet<ProfileModule>(new Action<ProfileModule>(this.attach_ProfileModules), new Action<ProfileModule>(this.detach_ProfileModules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(200)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path", DbType="VarChar(200)")]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentID", DbType="Int NOT NULL")]
		public int parentID
		{
			get
			{
				return this._parentID;
			}
			set
			{
				if ((this._parentID != value))
				{
					this.OnparentIDChanging(value);
					this.SendPropertyChanging();
					this._parentID = value;
					this.SendPropertyChanged("parentID");
					this.OnparentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_alt_text", DbType="VarChar(200)")]
		public string alt_text
		{
			get
			{
				return this._alt_text;
			}
			set
			{
				if ((this._alt_text != value))
				{
					this.Onalt_textChanging(value);
					this.SendPropertyChanging();
					this._alt_text = value;
					this.SendPropertyChanged("alt_text");
					this.Onalt_textChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_inMenu", DbType="Int NOT NULL")]
		public int inMenu
		{
			get
			{
				return this._inMenu;
			}
			set
			{
				if ((this._inMenu != value))
				{
					this.OninMenuChanging(value);
					this.SendPropertyChanging();
					this._inMenu = value;
					this.SendPropertyChanged("inMenu");
					this.OninMenuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(200)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_ProfileModule", Storage="_ProfileModules", ThisKey="id", OtherKey="moduleID")]
		public EntitySet<ProfileModule> ProfileModules
		{
			get
			{
				return this._ProfileModules;
			}
			set
			{
				this._ProfileModules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProfileModules(ProfileModule entity)
		{
			this.SendPropertyChanging();
			entity.Module = this;
		}
		
		private void detach_ProfileModules(ProfileModule entity)
		{
			this.SendPropertyChanging();
			entity.Module = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Newsletter")]
	public partial class Newsletter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Email;
		
		private System.DateTime _DateAdded;
		
		private System.Guid _Unsubscribe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDateAddedChanging(System.DateTime value);
    partial void OnDateAddedChanged();
    partial void OnUnsubscribeChanging(System.Guid value);
    partial void OnUnsubscribeChanged();
    #endregion
		
		public Newsletter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(400) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unsubscribe", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid Unsubscribe
		{
			get
			{
				return this._Unsubscribe;
			}
			set
			{
				if ((this._Unsubscribe != value))
				{
					this.OnUnsubscribeChanging(value);
					this.SendPropertyChanging();
					this._Unsubscribe = value;
					this.SendPropertyChanged("Unsubscribe");
					this.OnUnsubscribeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Payment")]
	public partial class Payment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _type;
		
		private System.DateTime _created;
		
		private string _confirmationKey;
		
		private string _status;
		
		private EntitySet<Cart> _Carts;
		
		private EntityRef<PaymentType> _PaymentTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OntypeChanging(int value);
    partial void OntypeChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    partial void OnconfirmationKeyChanging(string value);
    partial void OnconfirmationKeyChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public Payment()
		{
			this._Carts = new EntitySet<Cart>(new Action<Cart>(this.attach_Carts), new Action<Cart>(this.detach_Carts));
			this._PaymentTypes = default(EntityRef<PaymentType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int NOT NULL")]
		public int type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_confirmationKey", DbType="VarChar(500)")]
		public string confirmationKey
		{
			get
			{
				return this._confirmationKey;
			}
			set
			{
				if ((this._confirmationKey != value))
				{
					this.OnconfirmationKeyChanging(value);
					this.SendPropertyChanging();
					this._confirmationKey = value;
					this.SendPropertyChanged("confirmationKey");
					this.OnconfirmationKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_Cart", Storage="_Carts", ThisKey="ID", OtherKey="payment_id")]
		internal EntitySet<Cart> Carts
		{
			get
			{
				return this._Carts;
			}
			set
			{
				this._Carts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_PaymentType", Storage="_PaymentTypes", ThisKey="type", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public PaymentType PaymentTypes
		{
			get
			{
				return this._PaymentTypes.Entity;
			}
			set
			{
				PaymentType previousValue = this._PaymentTypes.Entity;
				if (((previousValue != value) 
							|| (this._PaymentTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PaymentTypes.Entity = null;
						previousValue.Payment = null;
					}
					this._PaymentTypes.Entity = value;
					if ((value != null))
					{
						value.Payment = this;
					}
					this.SendPropertyChanged("PaymentTypes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.Payment = this;
		}
		
		private void detach_Carts(Cart entity)
		{
			this.SendPropertyChanging();
			entity.Payment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentType")]
	public partial class PaymentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _name;
		
		private EntityRef<Payment> _Payment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public PaymentType()
		{
			this._Payment = default(EntityRef<Payment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					if (this._Payment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Payment_PaymentType", Storage="_Payment", ThisKey="ID", OtherKey="type", IsForeignKey=true)]
		internal Payment Payment
		{
			get
			{
				return this._Payment.Entity;
			}
			set
			{
				Payment previousValue = this._Payment.Entity;
				if (((previousValue != value) 
							|| (this._Payment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Payment.Entity = null;
						previousValue.PaymentTypes = null;
					}
					this._Payment.Entity = value;
					if ((value != null))
					{
						value.PaymentTypes = this;
						this._ID = value.type;
					}
					else
					{
						this._ID = default(int);
					}
					this.SendPropertyChanged("Payment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Profile")]
	public partial class Profile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _password;
		
		private string _email;
		
		private string _first;
		
		private string _last;
		
		private System.Nullable<System.DateTime> _date_added;
		
		private string _image;
		
		private string _bio;
		
		private EntitySet<ProfileModule> _ProfileModules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnfirstChanging(string value);
    partial void OnfirstChanged();
    partial void OnlastChanging(string value);
    partial void OnlastChanged();
    partial void Ondate_addedChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_addedChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnbioChanging(string value);
    partial void OnbioChanged();
    #endregion
		
		public Profile()
		{
			this._ProfileModules = new EntitySet<ProfileModule>(new Action<ProfileModule>(this.attach_ProfileModules), new Action<ProfileModule>(this.detach_ProfileModules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(100)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(200)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(300)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first", DbType="VarChar(400)")]
		public string first
		{
			get
			{
				return this._first;
			}
			set
			{
				if ((this._first != value))
				{
					this.OnfirstChanging(value);
					this.SendPropertyChanging();
					this._first = value;
					this.SendPropertyChanged("first");
					this.OnfirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last", DbType="VarChar(500)")]
		public string last
		{
			get
			{
				return this._last;
			}
			set
			{
				if ((this._last != value))
				{
					this.OnlastChanging(value);
					this.SendPropertyChanging();
					this._last = value;
					this.SendPropertyChanged("last");
					this.OnlastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_added", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_added
		{
			get
			{
				return this._date_added;
			}
			set
			{
				if ((this._date_added != value))
				{
					this.Ondate_addedChanging(value);
					this.SendPropertyChanging();
					this._date_added = value;
					this.SendPropertyChanged("date_added");
					this.Ondate_addedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(200)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bio", DbType="VarChar(MAX)")]
		public string bio
		{
			get
			{
				return this._bio;
			}
			set
			{
				if ((this._bio != value))
				{
					this.OnbioChanging(value);
					this.SendPropertyChanging();
					this._bio = value;
					this.SendPropertyChanged("bio");
					this.OnbioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_ProfileModule", Storage="_ProfileModules", ThisKey="id", OtherKey="profileID")]
		public EntitySet<ProfileModule> ProfileModules
		{
			get
			{
				return this._ProfileModules;
			}
			set
			{
				this._ProfileModules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProfileModules(ProfileModule entity)
		{
			this.SendPropertyChanging();
			entity.Profile = this;
		}
		
		private void detach_ProfileModules(ProfileModule entity)
		{
			this.SendPropertyChanging();
			entity.Profile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProfileModules")]
	public partial class ProfileModule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _profileID;
		
		private int _moduleID;
		
		private EntityRef<Profile> _Profile;
		
		private EntityRef<Module> _Module;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnprofileIDChanging(int value);
    partial void OnprofileIDChanged();
    partial void OnmoduleIDChanging(int value);
    partial void OnmoduleIDChanged();
    #endregion
		
		public ProfileModule()
		{
			this._Profile = default(EntityRef<Profile>);
			this._Module = default(EntityRef<Module>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_profileID", DbType="Int NOT NULL")]
		public int profileID
		{
			get
			{
				return this._profileID;
			}
			set
			{
				if ((this._profileID != value))
				{
					if (this._Profile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprofileIDChanging(value);
					this.SendPropertyChanging();
					this._profileID = value;
					this.SendPropertyChanged("profileID");
					this.OnprofileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_moduleID", DbType="Int NOT NULL")]
		public int moduleID
		{
			get
			{
				return this._moduleID;
			}
			set
			{
				if ((this._moduleID != value))
				{
					if (this._Module.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmoduleIDChanging(value);
					this.SendPropertyChanging();
					this._moduleID = value;
					this.SendPropertyChanged("moduleID");
					this.OnmoduleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profile_ProfileModule", Storage="_Profile", ThisKey="profileID", OtherKey="id", IsForeignKey=true)]
		public Profile Profile
		{
			get
			{
				return this._Profile.Entity;
			}
			set
			{
				Profile previousValue = this._Profile.Entity;
				if (((previousValue != value) 
							|| (this._Profile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profile.Entity = null;
						previousValue.ProfileModules.Remove(this);
					}
					this._Profile.Entity = value;
					if ((value != null))
					{
						value.ProfileModules.Add(this);
						this._profileID = value.id;
					}
					else
					{
						this._profileID = default(int);
					}
					this.SendPropertyChanged("Profile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Module_ProfileModule", Storage="_Module", ThisKey="moduleID", OtherKey="id", IsForeignKey=true)]
		public Module Module
		{
			get
			{
				return this._Module.Entity;
			}
			set
			{
				Module previousValue = this._Module.Entity;
				if (((previousValue != value) 
							|| (this._Module.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Module.Entity = null;
						previousValue.ProfileModules.Remove(this);
					}
					this._Module.Entity = value;
					if ((value != null))
					{
						value.ProfileModules.Add(this);
						this._moduleID = value.id;
					}
					else
					{
						this._moduleID = default(int);
					}
					this.SendPropertyChanged("Module");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Services")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _title;
		
		private string _description;
		
		private decimal _price;
		
		private string _hourly;
		
		private EntitySet<LocationService> _LocationServices;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OnhourlyChanging(string value);
    partial void OnhourlyChanged();
    #endregion
		
		public Service()
		{
			this._LocationServices = new EntitySet<LocationService>(new Action<LocationService>(this.attach_LocationServices), new Action<LocationService>(this.detach_LocationServices));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(300) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(500)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Decimal(18,2) NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hourly", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string hourly
		{
			get
			{
				return this._hourly;
			}
			set
			{
				if ((this._hourly != value))
				{
					this.OnhourlyChanging(value);
					this.SendPropertyChanging();
					this._hourly = value;
					this.SendPropertyChanged("hourly");
					this.OnhourlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_LocationService", Storage="_LocationServices", ThisKey="ID", OtherKey="serviceID")]
		public EntitySet<LocationService> LocationServices
		{
			get
			{
				return this._LocationServices;
			}
			set
			{
				this._LocationServices.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LocationServices(LocationService entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_LocationServices(LocationService entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.States")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _stateID;
		
		private string _state1;
		
		private string _abbr;
		
		private int _countryID;
		
		private decimal _taxRate;
		
		private EntitySet<Address> _Addresses;
		
		private EntitySet<DistributionCenter> _DistributionCenters;
		
		private EntityRef<Country> _Country;
		
		private EntityRef<Location> _Location;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstateIDChanging(int value);
    partial void OnstateIDChanged();
    partial void Onstate1Changing(string value);
    partial void Onstate1Changed();
    partial void OnabbrChanging(string value);
    partial void OnabbrChanged();
    partial void OncountryIDChanging(int value);
    partial void OncountryIDChanged();
    partial void OntaxRateChanging(decimal value);
    partial void OntaxRateChanged();
    #endregion
		
		public State()
		{
			this._Addresses = new EntitySet<Address>(new Action<Address>(this.attach_Addresses), new Action<Address>(this.detach_Addresses));
			this._DistributionCenters = new EntitySet<DistributionCenter>(new Action<DistributionCenter>(this.attach_DistributionCenters), new Action<DistributionCenter>(this.detach_DistributionCenters));
			this._Country = default(EntityRef<Country>);
			this._Location = default(EntityRef<Location>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int stateID
		{
			get
			{
				return this._stateID;
			}
			set
			{
				if ((this._stateID != value))
				{
					if (this._Location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstateIDChanging(value);
					this.SendPropertyChanging();
					this._stateID = value;
					this.SendPropertyChanged("stateID");
					this.OnstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="state", Storage="_state1", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string state1
		{
			get
			{
				return this._state1;
			}
			set
			{
				if ((this._state1 != value))
				{
					this.Onstate1Changing(value);
					this.SendPropertyChanging();
					this._state1 = value;
					this.SendPropertyChanged("state1");
					this.Onstate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_abbr", DbType="VarChar(3) NOT NULL", CanBeNull=false)]
		public string abbr
		{
			get
			{
				return this._abbr;
			}
			set
			{
				if ((this._abbr != value))
				{
					this.OnabbrChanging(value);
					this.SendPropertyChanging();
					this._abbr = value;
					this.SendPropertyChanged("abbr");
					this.OnabbrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_countryID", DbType="Int NOT NULL")]
		public int countryID
		{
			get
			{
				return this._countryID;
			}
			set
			{
				if ((this._countryID != value))
				{
					if (this._Country.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncountryIDChanging(value);
					this.SendPropertyChanging();
					this._countryID = value;
					this.SendPropertyChanged("countryID");
					this.OncountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taxRate", DbType="Decimal(18,2) NOT NULL")]
		public decimal taxRate
		{
			get
			{
				return this._taxRate;
			}
			set
			{
				if ((this._taxRate != value))
				{
					this.OntaxRateChanging(value);
					this.SendPropertyChanging();
					this._taxRate = value;
					this.SendPropertyChanged("taxRate");
					this.OntaxRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Address", Storage="_Addresses", ThisKey="stateID", OtherKey="state")]
		internal EntitySet<Address> Addresses
		{
			get
			{
				return this._Addresses;
			}
			set
			{
				this._Addresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_DistributionCenter", Storage="_DistributionCenters", ThisKey="stateID", OtherKey="State")]
		internal EntitySet<DistributionCenter> DistributionCenters
		{
			get
			{
				return this._DistributionCenters;
			}
			set
			{
				this._DistributionCenters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Country_State", Storage="_Country", ThisKey="countryID", OtherKey="ID", IsForeignKey=true)]
		public Country Country
		{
			get
			{
				return this._Country.Entity;
			}
			set
			{
				Country previousValue = this._Country.Entity;
				if (((previousValue != value) 
							|| (this._Country.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Country.Entity = null;
						previousValue.States.Remove(this);
					}
					this._Country.Entity = value;
					if ((value != null))
					{
						value.States.Add(this);
						this._countryID = value.ID;
					}
					else
					{
						this._countryID = default(int);
					}
					this.SendPropertyChanged("Country");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Location_State", Storage="_Location", ThisKey="stateID", OtherKey="stateID", IsForeignKey=true)]
		internal Location Location
		{
			get
			{
				return this._Location.Entity;
			}
			set
			{
				Location previousValue = this._Location.Entity;
				if (((previousValue != value) 
							|| (this._Location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Location.Entity = null;
						previousValue.States.Remove(this);
					}
					this._Location.Entity = value;
					if ((value != null))
					{
						value.States.Add(this);
						this._stateID = value.stateID;
					}
					else
					{
						this._stateID = default(int);
					}
					this.SendPropertyChanged("Location");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.State1 = this;
		}
		
		private void detach_Addresses(Address entity)
		{
			this.SendPropertyChanging();
			entity.State1 = null;
		}
		
		private void attach_DistributionCenters(DistributionCenter entity)
		{
			this.SendPropertyChanging();
			entity.State1 = this;
		}
		
		private void detach_DistributionCenters(DistributionCenter entity)
		{
			this.SendPropertyChanging();
			entity.State1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DistributionCenters")]
	public partial class DistributionCenter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Phone;
		
		private string _Fax;
		
		private string _Street1;
		
		private string _Street2;
		
		private string _City;
		
		private string _PostalCode;
		
		private string _CountryCode;
		
		private System.Nullable<decimal> _Latitude;
		
		private System.Nullable<decimal> _Longitude;
		
		private int _State;
		
		private EntityRef<State> _State1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnStreet1Changing(string value);
    partial void OnStreet1Changed();
    partial void OnStreet2Changing(string value);
    partial void OnStreet2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnCountryCodeChanging(string value);
    partial void OnCountryCodeChanged();
    partial void OnLatitudeChanging(System.Nullable<decimal> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<decimal> value);
    partial void OnLongitudeChanged();
    partial void OnStateChanging(int value);
    partial void OnStateChanged();
    #endregion
		
		public DistributionCenter()
		{
			this._State1 = default(EntityRef<State>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(100)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="VarChar(100)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street1", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Street1
		{
			get
			{
				return this._Street1;
			}
			set
			{
				if ((this._Street1 != value))
				{
					this.OnStreet1Changing(value);
					this.SendPropertyChanging();
					this._Street1 = value;
					this.SendPropertyChanged("Street1");
					this.OnStreet1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street2", DbType="VarChar(200)")]
		public string Street2
		{
			get
			{
				return this._Street2;
			}
			set
			{
				if ((this._Street2 != value))
				{
					this.OnStreet2Changing(value);
					this.SendPropertyChanging();
					this._Street2 = value;
					this.SendPropertyChanged("Street2");
					this.OnStreet2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryCode", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CountryCode
		{
			get
			{
				return this._CountryCode;
			}
			set
			{
				if ((this._CountryCode != value))
				{
					this.OnCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryCode = value;
					this.SendPropertyChanged("CountryCode");
					this.OnCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(18,8)")]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(18,8)")]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int NOT NULL")]
		public int State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					if (this._State1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_DistributionCenter", Storage="_State1", ThisKey="State", OtherKey="stateID", IsForeignKey=true)]
		public State State1
		{
			get
			{
				return this._State1.Entity;
			}
			set
			{
				State previousValue = this._State1.Entity;
				if (((previousValue != value) 
							|| (this._State1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State1.Entity = null;
						previousValue.DistributionCenters.Remove(this);
					}
					this._State1.Entity = value;
					if ((value != null))
					{
						value.DistributionCenters.Add(this);
						this._State = value.stateID;
					}
					else
					{
						this._State = default(int);
					}
					this.SendPropertyChanged("State1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Banners")]
	public partial class Banner : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _image;
		
		private string _title;
		
		private string _body;
		
		private string _link;
		
		private int _order;
		
		private int _isVisible;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void OnlinkChanging(string value);
    partial void OnlinkChanged();
    partial void OnorderChanging(int value);
    partial void OnorderChanged();
    partial void OnisVisibleChanging(int value);
    partial void OnisVisibleChanged();
    #endregion
		
		public Banner()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_image", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body", DbType="VarChar(MAX)")]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link", DbType="VarChar(500)")]
		public string link
		{
			get
			{
				return this._link;
			}
			set
			{
				if ((this._link != value))
				{
					this.OnlinkChanging(value);
					this.SendPropertyChanging();
					this._link = value;
					this.SendPropertyChanged("link");
					this.OnlinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[order]", Storage="_order", DbType="Int NOT NULL")]
		public int order
		{
			get
			{
				return this._order;
			}
			set
			{
				if ((this._order != value))
				{
					this.OnorderChanging(value);
					this.SendPropertyChanging();
					this._order = value;
					this.SendPropertyChanged("order");
					this.OnorderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isVisible", DbType="Int NOT NULL")]
		public int isVisible
		{
			get
			{
				return this._isVisible;
			}
			set
			{
				if ((this._isVisible != value))
				{
					this.OnisVisibleChanging(value);
					this.SendPropertyChanging();
					this._isVisible = value;
					this.SendPropertyChanged("isVisible");
					this.OnisVisibleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Setting")]
	public partial class Setting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _settingID;
		
		private int _groupID;
		
		private string _name;
		
		private string _value;
		
		private bool _isImage;
		
		private EntityRef<SettingGroup> _SettingGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsettingIDChanging(int value);
    partial void OnsettingIDChanged();
    partial void OngroupIDChanging(int value);
    partial void OngroupIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OnisImageChanging(bool value);
    partial void OnisImageChanged();
    #endregion
		
		public Setting()
		{
			this._SettingGroup = default(EntityRef<SettingGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_settingID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int settingID
		{
			get
			{
				return this._settingID;
			}
			set
			{
				if ((this._settingID != value))
				{
					this.OnsettingIDChanging(value);
					this.SendPropertyChanging();
					this._settingID = value;
					this.SendPropertyChanged("settingID");
					this.OnsettingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_groupID", DbType="Int NOT NULL")]
		public int groupID
		{
			get
			{
				return this._groupID;
			}
			set
			{
				if ((this._groupID != value))
				{
					if (this._SettingGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OngroupIDChanging(value);
					this.SendPropertyChanging();
					this._groupID = value;
					this.SendPropertyChanged("groupID");
					this.OngroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="VarChar(255)")]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isImage", DbType="Bit NOT NULL")]
		public bool isImage
		{
			get
			{
				return this._isImage;
			}
			set
			{
				if ((this._isImage != value))
				{
					this.OnisImageChanging(value);
					this.SendPropertyChanging();
					this._isImage = value;
					this.SendPropertyChanged("isImage");
					this.OnisImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SettingGroup_Setting", Storage="_SettingGroup", ThisKey="groupID", OtherKey="settingGroupID", IsForeignKey=true)]
		internal SettingGroup SettingGroup
		{
			get
			{
				return this._SettingGroup.Entity;
			}
			set
			{
				SettingGroup previousValue = this._SettingGroup.Entity;
				if (((previousValue != value) 
							|| (this._SettingGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SettingGroup.Entity = null;
						previousValue.Settings.Remove(this);
					}
					this._SettingGroup.Entity = value;
					if ((value != null))
					{
						value.Settings.Add(this);
						this._groupID = value.settingGroupID;
					}
					else
					{
						this._groupID = default(int);
					}
					this.SendPropertyChanged("SettingGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SettingGroup")]
	public partial class SettingGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _settingGroupID;
		
		private string _name;
		
		private EntitySet<Setting> _Settings;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsettingGroupIDChanging(int value);
    partial void OnsettingGroupIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public SettingGroup()
		{
			this._Settings = new EntitySet<Setting>(new Action<Setting>(this.attach_Settings), new Action<Setting>(this.detach_Settings));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_settingGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int settingGroupID
		{
			get
			{
				return this._settingGroupID;
			}
			set
			{
				if ((this._settingGroupID != value))
				{
					this.OnsettingGroupIDChanging(value);
					this.SendPropertyChanging();
					this._settingGroupID = value;
					this.SendPropertyChanged("settingGroupID");
					this.OnsettingGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SettingGroup_Setting", Storage="_Settings", ThisKey="settingGroupID", OtherKey="groupID")]
		public EntitySet<Setting> Settings
		{
			get
			{
				return this._Settings;
			}
			set
			{
				this._Settings.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Settings(Setting entity)
		{
			this.SendPropertyChanging();
			entity.SettingGroup = this;
		}
		
		private void detach_Settings(Setting entity)
		{
			this.SendPropertyChanging();
			entity.SettingGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ScheduledTask")]
	public partial class ScheduledTask : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _name;
		
		private string _url;
		
		private System.Nullable<System.DateTime> _runtime;
		
		private System.Nullable<System.DateTime> _lastRan;
		
		private System.Nullable<int> _interval;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void OnruntimeChanging(System.Nullable<System.DateTime> value);
    partial void OnruntimeChanged();
    partial void OnlastRanChanging(System.Nullable<System.DateTime> value);
    partial void OnlastRanChanged();
    partial void OnintervalChanging(System.Nullable<int> value);
    partial void OnintervalChanged();
    #endregion
		
		public ScheduledTask()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(255)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="VarChar(255)")]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_runtime", DbType="DateTime")]
		public System.Nullable<System.DateTime> runtime
		{
			get
			{
				return this._runtime;
			}
			set
			{
				if ((this._runtime != value))
				{
					this.OnruntimeChanging(value);
					this.SendPropertyChanging();
					this._runtime = value;
					this.SendPropertyChanged("runtime");
					this.OnruntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastRan", DbType="DateTime NULL")]
		public System.Nullable<System.DateTime> lastRan
		{
			get
			{
				return this._lastRan;
			}
			set
			{
				if ((this._lastRan != value))
				{
					this.OnlastRanChanging(value);
					this.SendPropertyChanging();
					this._lastRan = value;
					this.SendPropertyChanged("lastRan");
					this.OnlastRanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_interval", DbType="int NULL")]
		public System.Nullable<int> interval
		{
			get
			{
				return this._interval;
			}
			set
			{
				if ((this._interval != value))
				{
					this.OnintervalChanging(value);
					this.SendPropertyChanging();
					this._interval = value;
					this.SendPropertyChanged("interval");
					this.OnintervalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _number;
		
		private System.DateTime _dateAdded;
		
		private int _orderID;
		
		private string _invoiceType;
		
		private int _billTo;
		
		private int _shipTo;
		
		private System.Nullable<decimal> _salesTax;
		
		private string _billToCurrency;
		
		private System.Nullable<int> _curtOrder;
		
		private string _remitTo;
		
		private System.Nullable<decimal> _subtotal;
		
		private System.Nullable<decimal> _total;
		
		private System.Nullable<decimal> _discount;
		
		private System.Nullable<decimal> _discountTotal;
		
		private string _termsType;
		
		private System.Nullable<decimal> _discountPercent;
		
		private System.Nullable<System.DateTime> _discountDueDate;
		
		private System.Nullable<int> _discountDueDays;
		
		private System.Nullable<System.DateTime> _netDueDate;
		
		private System.Nullable<int> _netDueDays;
		
		private string _termsDescription;
		
		private bool _paid;
		
		private System.DateTime _created;
		
		private EntityRef<Address> _BillTo;
		
		private EntityRef<Address> _ShipTo;
		
		private EntitySet<InvoiceItem> _InvoiceItems;
		
		private EntitySet<InvoiceCode> _InvoiceCodes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnumberChanging(string value);
    partial void OnnumberChanged();
    partial void OndateAddedChanging(System.DateTime value);
    partial void OndateAddedChanged();
    partial void OnorderIDChanging(int value);
    partial void OnorderIDChanged();
    partial void OninvoiceTypeChanging(string value);
    partial void OninvoiceTypeChanged();
    partial void OnbillToChanging(int value);
    partial void OnbillToChanged();
    partial void OnshipToChanging(int value);
    partial void OnshipToChanged();
    partial void OnsalesTaxChanging(System.Nullable<decimal> value);
    partial void OnsalesTaxChanged();
    partial void OnbillToCurrencyChanging(string value);
    partial void OnbillToCurrencyChanged();
    partial void OncurtOrderChanging(System.Nullable<int> value);
    partial void OncurtOrderChanged();
    partial void OnremitToChanging(string value);
    partial void OnremitToChanged();
    partial void OnsubtotalChanging(System.Nullable<decimal> value);
    partial void OnsubtotalChanged();
    partial void OntotalChanging(System.Nullable<decimal> value);
    partial void OntotalChanged();
    partial void OndiscountChanging(System.Nullable<decimal> value);
    partial void OndiscountChanged();
    partial void OndiscountTotalChanging(System.Nullable<decimal> value);
    partial void OndiscountTotalChanged();
    partial void OntermsTypeChanging(string value);
    partial void OntermsTypeChanged();
    partial void OndiscountPercentChanging(System.Nullable<decimal> value);
    partial void OndiscountPercentChanged();
    partial void OndiscountDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OndiscountDueDateChanged();
    partial void OndiscountDueDaysChanging(System.Nullable<int> value);
    partial void OndiscountDueDaysChanged();
    partial void OnnetDueDateChanging(System.Nullable<System.DateTime> value);
    partial void OnnetDueDateChanged();
    partial void OnnetDueDaysChanging(System.Nullable<int> value);
    partial void OnnetDueDaysChanged();
    partial void OntermsDescriptionChanging(string value);
    partial void OntermsDescriptionChanged();
    partial void OnpaidChanging(bool value);
    partial void OnpaidChanged();
    partial void OncreatedChanging(System.DateTime value);
    partial void OncreatedChanged();
    #endregion
		
		public Invoice()
		{
			this._BillTo = default(EntityRef<Address>);
			this._ShipTo = default(EntityRef<Address>);
			this._InvoiceItems = new EntitySet<InvoiceItem>(new Action<InvoiceItem>(this.attach_InvoiceItems), new Action<InvoiceItem>(this.detach_InvoiceItems));
			this._InvoiceCodes = new EntitySet<InvoiceCode>(new Action<InvoiceCode>(this.attach_InvoiceCodes), new Action<InvoiceCode>(this.detach_InvoiceCodes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this.OnnumberChanging(value);
					this.SendPropertyChanging();
					this._number = value;
					this.SendPropertyChanged("number");
					this.OnnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateAdded", DbType="DateTime NOT NULL")]
		public System.DateTime dateAdded
		{
			get
			{
				return this._dateAdded;
			}
			set
			{
				if ((this._dateAdded != value))
				{
					this.OndateAddedChanging(value);
					this.SendPropertyChanging();
					this._dateAdded = value;
					this.SendPropertyChanged("dateAdded");
					this.OndateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_orderID", DbType="Int NOT NULL")]
		public int orderID
		{
			get
			{
				return this._orderID;
			}
			set
			{
				if ((this._orderID != value))
				{
					this.OnorderIDChanging(value);
					this.SendPropertyChanging();
					this._orderID = value;
					this.SendPropertyChanged("orderID");
					this.OnorderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string invoiceType
		{
			get
			{
				return this._invoiceType;
			}
			set
			{
				if ((this._invoiceType != value))
				{
					this.OninvoiceTypeChanging(value);
					this.SendPropertyChanging();
					this._invoiceType = value;
					this.SendPropertyChanged("invoiceType");
					this.OninvoiceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billTo", DbType="Int NOT NULL")]
		public int billTo
		{
			get
			{
				return this._billTo;
			}
			set
			{
				if ((this._billTo != value))
				{
					this.OnbillToChanging(value);
					this.SendPropertyChanging();
					this._billTo = value;
					this.SendPropertyChanged("billTo");
					this.OnbillToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shipTo", DbType="Int NOT NULL")]
		public int shipTo
		{
			get
			{
				return this._shipTo;
			}
			set
			{
				if ((this._shipTo != value))
				{
					this.OnshipToChanging(value);
					this.SendPropertyChanging();
					this._shipTo = value;
					this.SendPropertyChanged("shipTo");
					this.OnshipToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salesTax", DbType="Money")]
		public System.Nullable<decimal> salesTax
		{
			get
			{
				return this._salesTax;
			}
			set
			{
				if ((this._salesTax != value))
				{
					this.OnsalesTaxChanging(value);
					this.SendPropertyChanging();
					this._salesTax = value;
					this.SendPropertyChanged("salesTax");
					this.OnsalesTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billToCurrency", DbType="VarChar(10)")]
		public string billToCurrency
		{
			get
			{
				return this._billToCurrency;
			}
			set
			{
				if ((this._billToCurrency != value))
				{
					this.OnbillToCurrencyChanging(value);
					this.SendPropertyChanging();
					this._billToCurrency = value;
					this.SendPropertyChanged("billToCurrency");
					this.OnbillToCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_curtOrder", DbType="Int")]
		public System.Nullable<int> curtOrder
		{
			get
			{
				return this._curtOrder;
			}
			set
			{
				if ((this._curtOrder != value))
				{
					this.OncurtOrderChanging(value);
					this.SendPropertyChanging();
					this._curtOrder = value;
					this.SendPropertyChanged("curtOrder");
					this.OncurtOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_remitTo", DbType="VarChar(25)")]
		public string remitTo
		{
			get
			{
				return this._remitTo;
			}
			set
			{
				if ((this._remitTo != value))
				{
					this.OnremitToChanging(value);
					this.SendPropertyChanging();
					this._remitTo = value;
					this.SendPropertyChanged("remitTo");
					this.OnremitToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subtotal", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> subtotal
		{
			get
			{
				return this._subtotal;
			}
			set
			{
				if ((this._subtotal != value))
				{
					this.OnsubtotalChanging(value);
					this.SendPropertyChanging();
					this._subtotal = value;
					this.SendPropertyChanged("subtotal");
					this.OnsubtotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this.OndiscountChanging(value);
					this.SendPropertyChanging();
					this._discount = value;
					this.SendPropertyChanged("discount");
					this.OndiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discountTotal", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> discountTotal
		{
			get
			{
				return this._discountTotal;
			}
			set
			{
				if ((this._discountTotal != value))
				{
					this.OndiscountTotalChanging(value);
					this.SendPropertyChanging();
					this._discountTotal = value;
					this.SendPropertyChanged("discountTotal");
					this.OndiscountTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_termsType", DbType="VarChar(50)")]
		public string termsType
		{
			get
			{
				return this._termsType;
			}
			set
			{
				if ((this._termsType != value))
				{
					this.OntermsTypeChanging(value);
					this.SendPropertyChanging();
					this._termsType = value;
					this.SendPropertyChanged("termsType");
					this.OntermsTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discountPercent", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> discountPercent
		{
			get
			{
				return this._discountPercent;
			}
			set
			{
				if ((this._discountPercent != value))
				{
					this.OndiscountPercentChanging(value);
					this.SendPropertyChanging();
					this._discountPercent = value;
					this.SendPropertyChanged("discountPercent");
					this.OndiscountPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discountDueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> discountDueDate
		{
			get
			{
				return this._discountDueDate;
			}
			set
			{
				if ((this._discountDueDate != value))
				{
					this.OndiscountDueDateChanging(value);
					this.SendPropertyChanging();
					this._discountDueDate = value;
					this.SendPropertyChanged("discountDueDate");
					this.OndiscountDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discountDueDays", DbType="Int")]
		public System.Nullable<int> discountDueDays
		{
			get
			{
				return this._discountDueDays;
			}
			set
			{
				if ((this._discountDueDays != value))
				{
					this.OndiscountDueDaysChanging(value);
					this.SendPropertyChanging();
					this._discountDueDays = value;
					this.SendPropertyChanged("discountDueDays");
					this.OndiscountDueDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_netDueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> netDueDate
		{
			get
			{
				return this._netDueDate;
			}
			set
			{
				if ((this._netDueDate != value))
				{
					this.OnnetDueDateChanging(value);
					this.SendPropertyChanging();
					this._netDueDate = value;
					this.SendPropertyChanged("netDueDate");
					this.OnnetDueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_netDueDays", DbType="Int")]
		public System.Nullable<int> netDueDays
		{
			get
			{
				return this._netDueDays;
			}
			set
			{
				if ((this._netDueDays != value))
				{
					this.OnnetDueDaysChanging(value);
					this.SendPropertyChanging();
					this._netDueDays = value;
					this.SendPropertyChanged("netDueDays");
					this.OnnetDueDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_termsDescription", DbType="VarChar(255)")]
		public string termsDescription
		{
			get
			{
				return this._termsDescription;
			}
			set
			{
				if ((this._termsDescription != value))
				{
					this.OntermsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._termsDescription = value;
					this.SendPropertyChanged("termsDescription");
					this.OntermsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_paid", DbType="Bit NOT NULL")]
		public bool paid
		{
			get
			{
				return this._paid;
			}
			set
			{
				if ((this._paid != value))
				{
					this.OnpaidChanging(value);
					this.SendPropertyChanging();
					this._paid = value;
					this.SendPropertyChanged("paid");
					this.OnpaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_created", DbType="DateTime NOT NULL")]
		public System.DateTime created
		{
			get
			{
				return this._created;
			}
			set
			{
				if ((this._created != value))
				{
					this.OncreatedChanging(value);
					this.SendPropertyChanging();
					this._created = value;
					this.SendPropertyChanged("created");
					this.OncreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Address", Storage="_BillTo", ThisKey="billTo", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Address BillTo
		{
			get
			{
				return this._BillTo.Entity;
			}
			set
			{
				Address previousValue = this._BillTo.Entity;
				if (((previousValue != value) 
							|| (this._BillTo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BillTo.Entity = null;
						previousValue.Invoice = null;
					}
					this._BillTo.Entity = value;
					if ((value != null))
					{
						value.Invoice = this;
					}
					this.SendPropertyChanged("BillTo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Address1", Storage="_ShipTo", ThisKey="shipTo", OtherKey="ID", IsUnique=true, IsForeignKey=false)]
		public Address ShipTo
		{
			get
			{
				return this._ShipTo.Entity;
			}
			set
			{
				Address previousValue = this._ShipTo.Entity;
				if (((previousValue != value) 
							|| (this._ShipTo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShipTo.Entity = null;
						previousValue.Invoice1 = null;
					}
					this._ShipTo.Entity = value;
					if ((value != null))
					{
						value.Invoice1 = this;
					}
					this.SendPropertyChanged("ShipTo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceItem", Storage="_InvoiceItems", ThisKey="id", OtherKey="invoiceID")]
		public EntitySet<InvoiceItem> InvoiceItems
		{
			get
			{
				return this._InvoiceItems;
			}
			set
			{
				this._InvoiceItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceCode", Storage="_InvoiceCodes", ThisKey="id", OtherKey="invoiceID")]
		public EntitySet<InvoiceCode> InvoiceCodes
		{
			get
			{
				return this._InvoiceCodes;
			}
			set
			{
				this._InvoiceCodes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InvoiceItems(InvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_InvoiceItems(InvoiceItem entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
		
		private void attach_InvoiceCodes(InvoiceCode entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_InvoiceCodes(InvoiceCode entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceItem")]
	public partial class InvoiceItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _invoiceID;
		
		private string _partID;
		
		private int _quantity;
		
		private decimal _price;
		
		private string _description;
		
		private EntityRef<Invoice> _Invoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OninvoiceIDChanging(int value);
    partial void OninvoiceIDChanged();
    partial void OnpartIDChanging(string value);
    partial void OnpartIDChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OnpriceChanging(decimal value);
    partial void OnpriceChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public InvoiceItem()
		{
			this._Invoice = default(EntityRef<Invoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceID", DbType="Int NOT NULL")]
		public int invoiceID
		{
			get
			{
				return this._invoiceID;
			}
			set
			{
				if ((this._invoiceID != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OninvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._invoiceID = value;
					this.SendPropertyChanged("invoiceID");
					this.OninvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_partID", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string partID
		{
			get
			{
				return this._partID;
			}
			set
			{
				if ((this._partID != value))
				{
					this.OnpartIDChanging(value);
					this.SendPropertyChanging();
					this._partID = value;
					this.SendPropertyChanged("partID");
					this.OnpartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Money NOT NULL")]
		public decimal price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(255)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceItem", Storage="_Invoice", ThisKey="invoiceID", OtherKey="id", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.InvoiceItems.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.InvoiceItems.Add(this);
						this._invoiceID = value.id;
					}
					else
					{
						this._invoiceID = default(int);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceCode")]
	public partial class InvoiceCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _invoiceID;
		
		private string _type;
		
		private string _code;
		
		private decimal _value;
		
		private string _description;
		
		private EntityRef<Invoice> _Invoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OninvoiceIDChanging(int value);
    partial void OninvoiceIDChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnvalueChanging(decimal value);
    partial void OnvalueChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public InvoiceCode()
		{
			this._Invoice = default(EntityRef<Invoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoiceID", DbType="Int NOT NULL")]
		public int invoiceID
		{
			get
			{
				return this._invoiceID;
			}
			set
			{
				if ((this._invoiceID != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OninvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._invoiceID = value;
					this.SendPropertyChanged("invoiceID");
					this.OninvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Decimal(18,2) NOT NULL")]
		public decimal value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(255)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_InvoiceCode", Storage="_Invoice", ThisKey="invoiceID", OtherKey="id", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.InvoiceCodes.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.InvoiceCodes.Add(this);
						this._invoiceID = value.id;
					}
					else
					{
						this._invoiceID = default(int);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
