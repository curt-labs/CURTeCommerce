@{
    List<string> css = ViewBag.defaultcss ?? new List<string>();
    css.Add("/Content/css/part_listing.css");
    css.Add("/Content/shadowbox/shadowbox.css");
    ViewBag.defaultcss = css;
    List<string> js = ViewBag.defaultjs ?? new List<string>();
    js.Add("/Scripts/custom/part_listing.js");
    ViewBag.defaultjs = js;

    List<EcommercePlatform.Models.APIPart> parts = ViewBag.parts ?? new List<EcommercePlatform.Models.APIPart>();
    int part_count = ViewBag.partCount;
    int item_count = 0;
    EcommercePlatform.Models.Settings settings = ViewBag.settings ?? new EcommercePlatform.Models.Settings();
}
<div class="part_groups">
    <div class="part_content">
        @foreach (EcommercePlatform.Models.APIPart part in parts) {
            bool first = true;
            item_count++;
            <div class="part" id="@part.partID">
                <h4>@part.shortDesc</h4>
                <div class="left_col">
                    <p>Part #@part.partID</p>
                    <div class="image_array">
                        @foreach (EcommercePlatform.Models.APIImage img in part.images.Where(x => x.size.Equals("Venti")).OrderBy(x => x.sort).Take(5)) { // Get the Venti images
                            // Now make sure we have the Grande size to display
                            if(part.images.Where(x => x.size.Equals("Grande") && x.sort.Equals(img.sort)).Count() > 0){
                                <a href="@img.path" rel="Shadowbox[parts@(item_count)]" target="_blank" title="Click to enlarge" @((first)?"class=main":"class=sub")>
                                    <img src="@(part.images.Where(x => x.size.Equals("Grande") && x.sort.Equals(img.sort)).FirstOrDefault<EcommercePlatform.Models.APIImage>().path)" onerror="$(this).parent().remove()" alt="Click to enlarge" />
                                </a>
                                first = false;
                            }
                        }
                    </div>
                </div>
                <div class="mid_col">
                    @if (part.content.Any(x => x.key.ToLower().Equals("listdescription"))) {
                        <p>@part.content.Where(x => x.key.ToLower().Equals("listdescription")).Select(x => x.value).FirstOrDefault()</p>
                    }
                    <ul>
                        @foreach (EcommercePlatform.Models.APIAttribute content_piece in part.content.Where(x => x.key.Equals("Bullet") || x.key.Equals("Note")).OrderBy(x => x.key).ToList<EcommercePlatform.Models.APIAttribute>()) {
                            <li class="@content_piece.key">@content_piece.value</li>
                        }
                    </ul>
                </div>
                <div class="right_col">
                    <span class="price">@part.listPrice</span>
                    <a href="/Part/@part.partID" class="details" title="View Details">
                        See More
                    </a>
                    <a href="/Cart/Add/@part.partID" class="add_cart" data-id="@part.partID" title="Add to Cart">
                        <img src="/Content/img/cart.png" alt="Add to Cart" />
                        <span>Add to Cart</span>
                    </a>
                    @if (part.content.Where(x => x.key.Equals("installationSheet")).Count() > 0 && part.content.Where(x => x.key.Equals("installationSheet")).FirstOrDefault<EcommercePlatform.Models.APIAttribute>().value.Length > 0) {
                        <a href="@(part.content.Where(x => x.key.Equals("installationSheet")).FirstOrDefault<EcommercePlatform.Models.APIAttribute>().value)" target="_blank" class="install" title="View Install Sheet for Part #@part.partID">
                            <img src="/Content/img/pdf.png" alt="View Install Sheet for Part #@part.partID" />
                            Installation Sheet
                        </a>
                    }
                    @if (part.content.Where(x => x.key.Equals("AppGuide")).Count() > 0 && part.content.Where(x => x.key.Equals("AppGuide")).FirstOrDefault<EcommercePlatform.Models.APIAttribute>().value.Length > 0) {
                        <a href="@(part.content.Where(x => x.key.Equals("AppGuide")).FirstOrDefault<EcommercePlatform.Models.APIAttribute>().value)" target="_blank" title="Download Application Guide" class="install">
                            <img src="/Content/img/pdf.png" alt="Download Application Guide" />
                            Fit Your Vehicle
                        </a>
                    }
                </div>
                <div class="clearfix"></div>
            </div>
        }
        <div class="clearfix"></div>
    </div>
</div>