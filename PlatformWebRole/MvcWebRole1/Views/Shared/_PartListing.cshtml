@{
    Dictionary<string,List<EcommercePlatform.Models.APIPart>> parts = ViewBag.parts;
    if(parts == null){
        parts = new Dictionary<string,List<EcommercePlatform.Models.APIPart>>();
    }
    int part_count = ViewBag.partCount;
    int tab_count = 0;
    int item_count = 0;
    decimal part_group_height = part_count * 330;
}
<link href="/Content/view_sass/part_listing.css" rel="stylesheet" type="text/css" />
<link href="/Content/shadowbox/shadowbox.css" rel="stylesheet" type="text/css" />

<div class="part_tab_container">
    <ul>
        @foreach (KeyValuePair<string, List<EcommercePlatform.Models.APIPart>> part_group in parts.Where(x => !x.Key.ToUpper().Equals("SEARCH")).OrderBy(x => x.Key)) {
            string rgb1 = (part_group.Value[0].colorCode != null && part_group.Value[0].colorCode.Length > 0) ? part_group.Value[0].colorCode.Substring(0, 3) : "";
            string rgb2 = (part_group.Value[0].colorCode != null && part_group.Value[0].colorCode.Length > 0) ? part_group.Value[0].colorCode.Substring(3, 3) : "";
            string rgb3 = (part_group.Value[0].colorCode != null && part_group.Value[0].colorCode.Length > 0) ? part_group.Value[0].colorCode.Substring(6, 3) : "";
            if (tab_count == 0) {
                <li class="tab active" style="border-bottom: 4px solid rgb(@rgb1, @rgb2,@rgb3)">
                    <a href="javascript:void(0)" id="tab:@part_group.Key.Replace(" ", "")">@part_group.Key</a>
                </li>
            } else {
                <li class="tab" style="border-bottom: 4px solid rgb(@rgb1, @rgb2,@rgb3)">
                    <a href="javascript:void(0)" id="tab:@part_group.Key.Replace(" ", "")">@part_group.Key</a>
                </li>
            }
            tab_count++;
        }
    </ul>
    <div style="clear:both"></div>
</div>
<div id="part_container">
    <div class="part_groups">
        @foreach (KeyValuePair<string, List<EcommercePlatform.Models.APIPart>> part_list in parts.OrderBy(x => x.Key)) {
            <div class="part_content" id="@part_list.Key.Replace(" ", "")">
                @foreach (EcommercePlatform.Models.APIPart part in part_list.Value) {
                    bool first = true;
                    item_count++;
                    <div class="part" id="@part.partID">
                        <h4>@part.shortDesc</h4>
                        <div class="left_col">
                            <p>Part #@part.partID</p>
                            <div class="image_array">
                                @foreach (EcommercePlatform.Models.APIImage img in part.images.Where(x => x.size.Equals("Venti")).OrderBy(x => x.sort)) { // Get the Venti images
                                    // Now make sure we have the Grande size to display
                                    if(part.images.Where(x => x.size.Equals("Grande") && x.sort.Equals(img.sort)).Count() > 0){
                                        <a href="@img.path" rel="Shadowbox[parts@(item_count)]" target="_blank" title="Click to enlarge" @((first)?"class=main":"class=sub")>
                                            <img src="@(part.images.Where(x => x.size.Equals("Grande") && x.sort.Equals(img.sort)).FirstOrDefault<EcommercePlatform.Models.APIImage>().path)" onerror="$(this).parent().remove()" alt="Click to enlarge" />
                                        </a>
                                        first = false;
                                    }
                                }
                            </div>
                        </div>
                        <div class="mid_col">
                            <ul>
                                @foreach (EcommercePlatform.Models.APIAttribute content_piece in part.content.Where(x => !x.key.Equals("installVideo") && !x.key.Equals("installationSheet")).ToList<EcommercePlatform.Models.APIAttribute>()) {
                                    <li class="@content_piece.key">@content_piece.value</li>
                                }
                            </ul>
                        </div>
                        <div class="right_col">
                            <span class="price">@part.listPrice</span>
                            <a href="/Part/@part.partID" class="details" title="View Details">
                                See Accessories
                            </a>
                            <a href="/Cart/Add/@part.partID" class="add_cart" data-id="@part.partID" title="Add to Cart">
                                <img src="/Content/img/cart.png" alt="Add to Cart" />
                                <span>Add to Cart</span>
                            </a>
                            @if (part.content.Where(x => x.key.Equals("installationSheet")).Count() > 0 && part.content.Where(x => x.key.Equals("installationSheet")).FirstOrDefault<EcommercePlatform.Models.APIAttribute>().value.Length > 0) {
                                <a href="@(part.content.Where(x => x.key.Equals("installationSheet")).FirstOrDefault<EcommercePlatform.Models.APIAttribute>().value)" target="_blank" class="install" title="View Install Sheet for Part #@part.partID">
                                    <img src="/Content/img/pdf.png" alt="View Install Sheet for Part #@part.partID" />
                                    Installation Sheet
                                </a>
                            }
                        </div>
                        <div class="clearfix"></div>
                    </div>
                }
            </div>
        }
        <div style="clear:both"></div>
    </div>
</div>
<style type="text/css">
    .part_groups{
        height: @(part_group_height)px;
    }
</style>
@if (HttpContext.Current.IsDebuggingEnabled) {
    <script src="/Scripts/custom/part_listing.js" type="text/javascript"></script>
} else {
    <script src="/Scripts/custom/part_listing.min.js" type="text/javascript"></script>
}
<script type="text/javascript" src="/Scripts/tools/shadowbox.js"></script>
